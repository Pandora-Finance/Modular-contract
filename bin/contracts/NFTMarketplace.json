{
    "contractName": "NFTMarketplace",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "price",
                            "type": "uint256"
                        },
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "uri",
                            "type": "string"
                        },
                        {
                            "internalType": "bool",
                            "name": "directSale",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "bidSale",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "status",
                            "type": "bool"
                        },
                        {
                            "internalType": "address",
                            "name": "mintedBy",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "currentOwner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "numberOfTransfers",
                            "type": "uint256"
                        }
                    ],
                    "indexed": false,
                    "internalType": "struct NFTV1Storage.TokenMeta",
                    "name": "data",
                    "type": "tuple"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                }
            ],
            "name": "TokenMetaReturn",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "Bids",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "sellerAddress",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "buyerAddress",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                },
                {
                    "internalType": "bool",
                    "name": "withdrawn",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "transferCount",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "BuyNFT",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "NFTImplementation",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_price",
                    "type": "uint256"
                }
            ],
            "name": "SellNFT",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "_tokenIds",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "_tokenMeta",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "uri",
                    "type": "string"
                },
                {
                    "internalType": "bool",
                    "name": "directSale",
                    "type": "bool"
                },
                {
                    "internalType": "bool",
                    "name": "bidSale",
                    "type": "bool"
                },
                {
                    "internalType": "bool",
                    "name": "status",
                    "type": "bool"
                },
                {
                    "internalType": "address",
                    "name": "mintedBy",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "currentOwner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "numberOfTransfers",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "admin",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_tokenId",
                    "type": "uint256"
                }
            ],
            "name": "fetchNft",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "price",
                            "type": "uint256"
                        },
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "uri",
                            "type": "string"
                        },
                        {
                            "internalType": "bool",
                            "name": "directSale",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "bidSale",
                            "type": "bool"
                        },
                        {
                            "internalType": "bool",
                            "name": "status",
                            "type": "bool"
                        },
                        {
                            "internalType": "address",
                            "name": "mintedBy",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "currentOwner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "numberOfTransfers",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct NFTV1Storage.TokenMeta",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getContractBalance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_tokenURI",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_price",
                    "type": "uint256"
                }
            ],
            "name": "mintNFT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pendingAdmin",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pendingNFTImplementation",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"directSale\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"bidSale\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"mintedBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTransfers\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct NFTV1Storage.TokenMeta\",\"name\":\"data\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"TokenMetaReturn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sellerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"transferCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"BuyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NFTImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"SellNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tokenIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokenMeta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"directSale\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"bidSale\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"mintedBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTransfers\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"fetchNft\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"directSale\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"bidSale\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"mintedBy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTransfers\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTV1Storage.TokenMeta\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingNFTImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/contracts/NFTMarketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/contracts/NFTMarketplace.sol\":{\"keccak256\":\"0xf3ef7dc9e38b295fd9423c44e952263e92b9713f9d8a48ef157c1f1325595584\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba332e5a6052e270fdd4798f53fce36af7b1449bc56c923560eadf84a7223eb0\",\"dweb:/ipfs/QmZts1dyHD63A1RGxRjEErcEaj76s1MnaKgxAziAzTpUbq\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/contracts/NFTStorage.sol\":{\"keccak256\":\"0x25c45b70655bbeace0eb67b67fcd5f0f79e1f19f0523fad80b0219d5a93b3ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f29aed4e3fa5693647280d64adb9ec8ebc7e358d7a9a2357b906d6893c7d929c\",\"dweb:/ipfs/Qmd9c7X6zgnPUB1ScTSASDHoHWTZ746emeXC4AUSWEWYtx\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x046a0ed44997d20c6fac6fb186cb2ce8957a1b25497f713bc18c79db21e57dee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eee371bf0d277728f39e6fe9b516b0f13f91e61a25ee6214bb7f1fead31b7fa6\",\"dweb:/ipfs/QmZbR4JdqZwitQbnuGG4dP3s7L9hh6GcugZzhinMY7Z2xP\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x49915fbc84c030ba425312356c1a0a28f81cdee5ab637f7a264752b52243fec6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737e47a9d1e454315102032a34fb8f2b290ca303703ec5c6512a64e7a2d84d99\",\"dweb:/ipfs/QmRCRBB6sBM1uhykvfi61ksr3J3euoKaAk5NMTJPmsBzdD\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0x8116b65b11e0a65ad6cf40cf2d71d2dacad80ddc37ad42af965fc919afb19e5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8339970b096c894cc9a2462a956e368d824783425577a741ce8c9edc88712ecb\",\"dweb:/ipfs/QmWbKYUaqn4dk5JVXxsDzzdi8BPGqsyBx7BH3XbsXF8EqJ\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x5f8d2e5137f7603eeaa0516e5b40dc6e637f179edea8134f1dbef9754c9baf2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d0bcb68bd57fa5b393b9a47206bc55b9afce8abd70c87ff3ff9e78aa7f6a891\",\"dweb:/ipfs/QmSVBBwupDnDntQfMEAmjiZr6nbZpyyB453iLsMTQSRMSq\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0xe0091487bb0da2016b050e276b74e83a3a4fa641f65600558281a3dc3ef24994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://396d492663d7fa100356bed775751ba9200c9a1527366ccc332143fb01c79d58\",\"dweb:/ipfs/QmNpRY2wymncQP4GjhwMrLEZBGbJabRxpX5JpLXekL1NxC\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xed12e1c10c09054954b16a1b1f4250c4bbc0c7140d720777626fb5886a1a0e25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de44624131ca75031b9d8751c42138d5792acb956604dd776c1c7cf1fbd86d26\",\"dweb:/ipfs/QmaUiV9pMt4AeAMxdMnDCsQSwFXLmTAvrQwWBb1bwZBhTu\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x8c5737e80521ac5e76c0d9d2cdb67647906fdadeb296644910eeecb31042e1da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://029725970d69465cca169353fa146f716e557bd974a0e2356b7791095469788c\",\"dweb:/ipfs/QmQjDRaegdUPcwyyzygnBGm68cdLBQ5BHxHqPi8bGW74GX\"]},\"c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x650712f855228b7cdeb90738d99dd33ff3a7c9770914ff03eb93f90218fe164b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d61d29cfb52a862da981f6688772dd009132757bcb85e4be8be506db1ed71f9\",\"dweb:/ipfs/QmWWHRKr5aTxyU4TRehnU6toBctgi217toZdth6JqYrh5y\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b50612ae7806100206000396000f3fe6080604052600436106101c15760003560e01c80638da5cb5b116100f7578063a7f323da11610095578063e43f049011610064578063e43f049014610530578063e985e9c51461055d578063f2fde38b146105a6578063f851a440146105c657600080fd5b8063a7f323da1461047f578063aa46a400146104da578063b88d4fde146104f0578063c87b56dd1461051057600080fd5b806398062bbf116100d157806398062bbf1461040c578063a22cb4651461042c578063a37365e01461044c578063a632f8001461045f57600080fd5b80638da5cb5b146103a25780638e57ff16146103c057806395d89b41146103f757600080fd5b806342842e0e116101645780636f9fb98a1161013e5780636f9fb98a1461034557806370a0823114610358578063715018a6146103785780638129fc1c1461038d57600080fd5b806342842e0e146102d75780636352211e146102f757806364b309071461031757600080fd5b8063081812fc116101a0578063081812fc14610255578063095ea7b31461027557806323b872dd1461029757806326782247146102b757600080fd5b8062d96d02146101c657806301ffc9a71461020357806306fdde0314610233575b600080fd5b3480156101d257600080fd5b506002546101e6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561020f57600080fd5b5061022361021e36600461235a565b6105e6565b60405190151581526020016101fa565b34801561023f57600080fd5b50610248610638565b6040516101fa91906123cf565b34801561026157600080fd5b506101e66102703660046123e2565b6106ca565b34801561028157600080fd5b50610295610290366004612417565b610764565b005b3480156102a357600080fd5b506102956102b2366004612441565b61087a565b3480156102c357600080fd5b506001546101e6906001600160a01b031681565b3480156102e357600080fd5b506102956102f2366004612441565b6108ab565b34801561030357600080fd5b506101e66103123660046123e2565b6108c6565b34801561032357600080fd5b50610337610332366004612529565b61093d565b6040519081526020016101fa565b34801561035157600080fd5b5047610337565b34801561036457600080fd5b50610337610373366004612596565b610b43565b34801561038457600080fd5b50610295610bca565b34801561039957600080fd5b50610295610c30565b3480156103ae57600080fd5b50609f546001600160a01b03166101e6565b3480156103cc57600080fd5b506103e06103db3660046123e2565b610cfb565b6040516101fa9b9a999897969594939291906125b1565b34801561040357600080fd5b50610248610e79565b34801561041857600080fd5b506003546101e6906001600160a01b031681565b34801561043857600080fd5b5061029561044736600461262e565b610e88565b61029561045a3660046123e2565b610e97565b34801561046b57600080fd5b5061029561047a36600461266a565b6112f6565b34801561048b57600080fd5b5061049f61049a36600461266a565b611369565b604080519687526001600160a01b039586166020880152939094169285019290925260608401521515608083015260a082015260c0016101fa565b3480156104e657600080fd5b5061033760055481565b3480156104fc57600080fd5b5061029561050b36600461268c565b6113cf565b34801561051c57600080fd5b5061024861052b3660046123e2565b611407565b34801561053c57600080fd5b5061055061054b3660046123e2565b6114ef565b6040516101fa91906127e0565b34801561056957600080fd5b506102236105783660046127f3565b6001600160a01b03918216600090815260726020908152604080832093909416825291909152205460ff1690565b3480156105b257600080fd5b506102956105c1366004612596565b611730565b3480156105d257600080fd5b506000546101e6906001600160a01b031681565b60006001600160e01b031982166380ac58cd60e01b148061061757506001600160e01b03198216635b5e139f60e01b145b8061063257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606d805461064790612826565b80601f016020809104026020016040519081016040528092919081815260200182805461067390612826565b80156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b5050505050905090565b6000818152606f60205260408120546001600160a01b03166107485760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152607160205260409020546001600160a01b031690565b600061076f826108c6565b9050806001600160a01b0316836001600160a01b031614156107dd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161073f565b336001600160a01b03821614806107f957506107f98133610578565b61086b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161073f565b61087583836117f8565b505050565b6108843382611866565b6108a05760405162461bcd60e51b815260040161073f90612861565b61087583838361195d565b610875838383604051806020016040528060008152506113cf565b6000818152606f60205260408120546001600160a01b0316806106325760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161073f565b600080821161094b57600080fd5b60016005600082825461095e91906128c8565b9250508190555061097133600554611afd565b600060405180610160016040528060055481526020018481526020018581526020018681526020016001151581526020016000151581526020016000151581526020016109bb3390565b6001600160a01b03168152602001336001600160a01b03168152602001336001600160a01b03168152600060209182018190526005548152600482526040908190208351815583830151600182015590830151805193945084939192610a29926002850192909101906122ab565b5060608201518051610a459160038401916020909101906122ab565b50608082015160048201805460a085015160c086015160e087015161ffff1990931694151561ff0019169490941761010091151582021762010000600160b81b03191662010000941515949094026301000000600160b81b0319169390931763010000006001600160a01b03928316021790915590830151600580840180546001600160a01b0319908116938516939093179055610120850151600685018054909316931692909217905561014090920151600790910155546040517f17090f1d29fb53f3f90f89a39c156a726f7b1d567ea849d1b2cc3a2d415445e891610b2f918491906128e0565b60405180910390a150506005549392505050565b60006001600160a01b038216610bae5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161073f565b506001600160a01b031660009081526070602052604090205490565b609f546001600160a01b03163314610c245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073f565b610c2e6000611c3f565b565b600854610100900460ff1680610c49575060085460ff16155b610c655760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015610c87576008805461ffff19166101011790555b610c8f611c91565b610c97611cf8565b610ce66040518060400160405280600e81526020016d4e46544d61726b6574506c61636560901b81525060405180604001604052806007815260200166139195135492d560ca1b815250611d57565b8015610cf8576008805461ff00191690555b50565b60046020526000908152604090208054600182015460028301805492939192610d2390612826565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4f90612826565b8015610d9c5780601f10610d7157610100808354040283529160200191610d9c565b820191906000526020600020905b815481529060010190602001808311610d7f57829003601f168201915b505050505090806003018054610db190612826565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddd90612826565b8015610e2a5780601f10610dff57610100808354040283529160200191610e2a565b820191906000526020600020905b815481529060010190602001808311610e0d57829003601f168201915b50505050600483015460058401546006850154600790950154939460ff8084169561010085048216955062010000850490911693630100000090046001600160a01b039081169381169216908b565b6060606e805461064790612826565b610e93338383611dde565b5050565b600260d1541415610eea5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161073f565b600260d1553315801590610f185750610f02816108c6565b6001600160a01b0316336001600160a01b031614155b610f2157600080fd5b60008181526004602081905260409091200154610100900460ff1615610f4657600080fd5b6000610f51826108c6565b9050600060046000848152602001908152602001600020604051806101600160405290816000820154815260200160018201548152602001600282018054610f9890612826565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc490612826565b80156110115780601f10610fe657610100808354040283529160200191611011565b820191906000526020600020905b815481529060010190602001808311610ff457829003601f168201915b5050505050815260200160038201805461102a90612826565b80601f016020809104026020016040519081016040528092919081815260200182805461105690612826565b80156110a35780601f10611078576101008083540402835291602001916110a3565b820191906000526020600020905b81548152906001019060200180831161108657829003601f168201915b5050509183525050600482015460ff808216151560208085019190915261010083048216151560408501526201000083049091161515606084015263010000009091046001600160a01b0390811660808401526005840154811660a084015260068401541660c083015260079092015460e0909101528101519091503410156111635760405162461bcd60e51b81526020600482015260126024820152715072696365203e3d206e667420707269636560701b604482015260640161073f565b61116e82338561195d565b6101008101516040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156111a9573d6000803e3d6000fd5b50610100820180516001600160a01b031661012084015233905261014082018051600191906111d99083906128c8565b905250346020808401918252600086815260048252604090819020855181559251600184015584015180518593926112189260028501929101906122ab565b50606082015180516112349160038401916020909101906122ab565b50608082015160048201805460a085015160c086015160e087015161ffff1990931694151561ff0019169490941761010091151582021762010000600160b81b03191662010000941515949094026301000000600160b81b0319169390931763010000006001600160a01b039283160217909155908301516005830180546001600160a01b03199081169284169290921790556101208401516006840180549092169216919091179055610140909101516007909101555050600160d1555050565b6000828152606f602052604090205482906001600160a01b031661131957600080fd5b611322836108c6565b6001600160a01b0316336001600160a01b03161461133f57600080fd5b506000918252600460208190526040909220918201805461ffff1916600190811790915590910155565b6006602052816000526040600020818154811061138557600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549396506001600160a01b039283169550911692909160ff9091169086565b6113d93383611866565b6113f55760405162461bcd60e51b815260040161073f90612861565b61140184848484611ead565b50505050565b6000818152606f60205260409020546060906001600160a01b03166114865760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161073f565b600061149d60408051602081019091526000815290565b905060008151116114bd57604051806020016040528060008152506114e8565b806114c784611ee0565b6040516020016114d8929190612950565b6040516020818303038152906040525b9392505050565b61156d6040518061016001604052806000815260200160008152602001606081526020016060815260200160001515815260200160001515815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b600460008381526020019081526020016000206040518061016001604052908160008201548152602001600182015481526020016002820180546115b090612826565b80601f01602080910402602001604051908101604052809291908181526020018280546115dc90612826565b80156116295780601f106115fe57610100808354040283529160200191611629565b820191906000526020600020905b81548152906001019060200180831161160c57829003601f168201915b5050505050815260200160038201805461164290612826565b80601f016020809104026020016040519081016040528092919081815260200182805461166e90612826565b80156116bb5780601f10611690576101008083540402835291602001916116bb565b820191906000526020600020905b81548152906001019060200180831161169e57829003601f168201915b5050509183525050600482015460ff80821615156020840152610100820481161515604084015262010000820416151560608301526001600160a01b036301000000909104811660808301526005830154811660a083015260068301541660c082015260079091015460e09091015292915050565b609f546001600160a01b0316331461178a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073f565b6001600160a01b0381166117ef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161073f565b610cf881611c3f565b600081815260716020526040902080546001600160a01b0319166001600160a01b038416908117909155819061182d826108c6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606f60205260408120546001600160a01b03166118df5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161073f565b60006118ea836108c6565b9050806001600160a01b0316846001600160a01b031614806119255750836001600160a01b031661191a846106ca565b6001600160a01b0316145b8061195557506001600160a01b0380821660009081526072602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611970826108c6565b6001600160a01b0316146119d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161073f565b6001600160a01b038216611a3a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161073f565b611a456000826117f8565b6001600160a01b0383166000908152607060205260408120805460019290611a6e90849061297f565b90915550506001600160a01b0382166000908152607060205260408120805460019290611a9c9084906128c8565b90915550506000818152606f602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216611b535760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161073f565b6000818152606f60205260409020546001600160a01b031615611bb85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161073f565b6001600160a01b0382166000908152607060205260408120805460019290611be19084906128c8565b90915550506000818152606f602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b609f80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600854610100900460ff1680611caa575060085460ff16155b611cc65760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015611ce8576008805461ffff19166101011790555b611cf0611fde565b610ce6612048565b600854610100900460ff1680611d11575060085460ff16155b611d2d5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015611d4f576008805461ffff19166101011790555b610ce66120a8565b600854610100900460ff1680611d70575060085460ff16155b611d8c5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015611dae576008805461ffff19166101011790555b611db6611fde565b611dbe611fde565b611dc88383612118565b8015610875576008805461ff0019169055505050565b816001600160a01b0316836001600160a01b03161415611e405760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161073f565b6001600160a01b03838116600081815260726020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611eb884848461195d565b611ec4848484846121ad565b6114015760405162461bcd60e51b815260040161073f90612996565b606081611f045750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f2e5780611f18816129e8565b9150611f279050600a83612a19565b9150611f08565b60008167ffffffffffffffff811115611f4957611f4961247d565b6040519080825280601f01601f191660200182016040528015611f73576020820181803683370190505b5090505b841561195557611f8860018361297f565b9150611f95600a86612a2d565b611fa09060306128c8565b60f81b818381518110611fb557611fb5612a41565b60200101906001600160f81b031916908160001a905350611fd7600a86612a19565b9450611f77565b600854610100900460ff1680611ff7575060085460ff16155b6120135760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015610ce6576008805461ffff19166101011790558015610cf8576008805461ff001916905550565b600854610100900460ff1680612061575060085460ff16155b61207d5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff1615801561209f576008805461ffff19166101011790555b610ce633611c3f565b600854610100900460ff16806120c1575060085460ff16155b6120dd5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff161580156120ff576008805461ffff19166101011790555b600160d1558015610cf8576008805461ff001916905550565b600854610100900460ff1680612131575060085460ff16155b61214d5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff1615801561216f576008805461ffff19166101011790555b825161218290606d9060208601906122ab565b50815161219690606e9060208501906122ab565b508015610875576008805461ff0019169055505050565b60006001600160a01b0384163b156122a057604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906121f1903390899088908890600401612a57565b6020604051808303816000875af192505050801561222c575060408051601f3d908101601f1916820190925261222991810190612a94565b60015b612286573d80801561225a576040519150601f19603f3d011682016040523d82523d6000602084013e61225f565b606091505b50805161227e5760405162461bcd60e51b815260040161073f90612996565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611955565b506001949350505050565b8280546122b790612826565b90600052602060002090601f0160209004810192826122d9576000855561231f565b82601f106122f257805160ff191683800117855561231f565b8280016001018555821561231f579182015b8281111561231f578251825591602001919060010190612304565b5061232b92915061232f565b5090565b5b8082111561232b5760008155600101612330565b6001600160e01b031981168114610cf857600080fd5b60006020828403121561236c57600080fd5b81356114e881612344565b60005b8381101561239257818101518382015260200161237a565b838111156114015750506000910152565b600081518084526123bb816020860160208601612377565b601f01601f19169290920160200192915050565b6020815260006114e860208301846123a3565b6000602082840312156123f457600080fd5b5035919050565b80356001600160a01b038116811461241257600080fd5b919050565b6000806040838503121561242a57600080fd5b612433836123fb565b946020939093013593505050565b60008060006060848603121561245657600080fd5b61245f846123fb565b925061246d602085016123fb565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156124ae576124ae61247d565b604051601f8501601f19908116603f011681019082821181831017156124d6576124d661247d565b816040528093508581528686860111156124ef57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261251a57600080fd5b6114e883833560208501612493565b60008060006060848603121561253e57600080fd5b833567ffffffffffffffff8082111561255657600080fd5b61256287838801612509565b9450602086013591508082111561257857600080fd5b5061258586828701612509565b925050604084013590509250925092565b6000602082840312156125a857600080fd5b6114e8826123fb565b60006101608d83528c60208401528060408401526125d18184018d6123a3565b905082810360608401526125e5818c6123a3565b9915156080840152505095151560a087015293151560c08601526001600160a01b0392831660e08601529082166101008501521661012083015261014090910152949350505050565b6000806040838503121561264157600080fd5b61264a836123fb565b91506020830135801515811461265f57600080fd5b809150509250929050565b6000806040838503121561267d57600080fd5b50508035926020909101359150565b600080600080608085870312156126a257600080fd5b6126ab856123fb565b93506126b9602086016123fb565b925060408501359150606085013567ffffffffffffffff8111156126dc57600080fd5b8501601f810187136126ed57600080fd5b6126fc87823560208401612493565b91505092959194509250565b600061016082518452602083015160208501526040830151816040860152612732828601826123a3565b9150506060830151848203606086015261274c82826123a3565b9150506080830151612762608086018215159052565b5060a083015161277660a086018215159052565b5060c083015161278a60c086018215159052565b5060e08301516127a560e08601826001600160a01b03169052565b50610100838101516001600160a01b039081169186019190915261012080850151909116908501526101409283015192909301919091525090565b6020815260006114e86020830184612708565b6000806040838503121561280657600080fd5b61280f836123fb565b915061281d602084016123fb565b90509250929050565b600181811c9082168061283a57607f821691505b6020821081141561285b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156128db576128db6128b2565b500190565b6040815260006128f36040830185612708565b90508260208301529392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008351612962818460208801612377565b835190830190612976818360208801612377565b01949350505050565b600082821015612991576129916128b2565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156129fc576129fc6128b2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612a2857612a28612a03565b500490565b600082612a3c57612a3c612a03565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a8a908301846123a3565b9695505050505050565b600060208284031215612aa657600080fd5b81516114e88161234456fea26469706673582212209324b7b8251b66e5ae4ecf618512a776de2489ed4d5e2c7fcf2b6d98e559da8b64736f6c634300080a0033",
    "deployedBytecode": "6080604052600436106101c15760003560e01c80638da5cb5b116100f7578063a7f323da11610095578063e43f049011610064578063e43f049014610530578063e985e9c51461055d578063f2fde38b146105a6578063f851a440146105c657600080fd5b8063a7f323da1461047f578063aa46a400146104da578063b88d4fde146104f0578063c87b56dd1461051057600080fd5b806398062bbf116100d157806398062bbf1461040c578063a22cb4651461042c578063a37365e01461044c578063a632f8001461045f57600080fd5b80638da5cb5b146103a25780638e57ff16146103c057806395d89b41146103f757600080fd5b806342842e0e116101645780636f9fb98a1161013e5780636f9fb98a1461034557806370a0823114610358578063715018a6146103785780638129fc1c1461038d57600080fd5b806342842e0e146102d75780636352211e146102f757806364b309071461031757600080fd5b8063081812fc116101a0578063081812fc14610255578063095ea7b31461027557806323b872dd1461029757806326782247146102b757600080fd5b8062d96d02146101c657806301ffc9a71461020357806306fdde0314610233575b600080fd5b3480156101d257600080fd5b506002546101e6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561020f57600080fd5b5061022361021e36600461235a565b6105e6565b60405190151581526020016101fa565b34801561023f57600080fd5b50610248610638565b6040516101fa91906123cf565b34801561026157600080fd5b506101e66102703660046123e2565b6106ca565b34801561028157600080fd5b50610295610290366004612417565b610764565b005b3480156102a357600080fd5b506102956102b2366004612441565b61087a565b3480156102c357600080fd5b506001546101e6906001600160a01b031681565b3480156102e357600080fd5b506102956102f2366004612441565b6108ab565b34801561030357600080fd5b506101e66103123660046123e2565b6108c6565b34801561032357600080fd5b50610337610332366004612529565b61093d565b6040519081526020016101fa565b34801561035157600080fd5b5047610337565b34801561036457600080fd5b50610337610373366004612596565b610b43565b34801561038457600080fd5b50610295610bca565b34801561039957600080fd5b50610295610c30565b3480156103ae57600080fd5b50609f546001600160a01b03166101e6565b3480156103cc57600080fd5b506103e06103db3660046123e2565b610cfb565b6040516101fa9b9a999897969594939291906125b1565b34801561040357600080fd5b50610248610e79565b34801561041857600080fd5b506003546101e6906001600160a01b031681565b34801561043857600080fd5b5061029561044736600461262e565b610e88565b61029561045a3660046123e2565b610e97565b34801561046b57600080fd5b5061029561047a36600461266a565b6112f6565b34801561048b57600080fd5b5061049f61049a36600461266a565b611369565b604080519687526001600160a01b039586166020880152939094169285019290925260608401521515608083015260a082015260c0016101fa565b3480156104e657600080fd5b5061033760055481565b3480156104fc57600080fd5b5061029561050b36600461268c565b6113cf565b34801561051c57600080fd5b5061024861052b3660046123e2565b611407565b34801561053c57600080fd5b5061055061054b3660046123e2565b6114ef565b6040516101fa91906127e0565b34801561056957600080fd5b506102236105783660046127f3565b6001600160a01b03918216600090815260726020908152604080832093909416825291909152205460ff1690565b3480156105b257600080fd5b506102956105c1366004612596565b611730565b3480156105d257600080fd5b506000546101e6906001600160a01b031681565b60006001600160e01b031982166380ac58cd60e01b148061061757506001600160e01b03198216635b5e139f60e01b145b8061063257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606d805461064790612826565b80601f016020809104026020016040519081016040528092919081815260200182805461067390612826565b80156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b5050505050905090565b6000818152606f60205260408120546001600160a01b03166107485760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152607160205260409020546001600160a01b031690565b600061076f826108c6565b9050806001600160a01b0316836001600160a01b031614156107dd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161073f565b336001600160a01b03821614806107f957506107f98133610578565b61086b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161073f565b61087583836117f8565b505050565b6108843382611866565b6108a05760405162461bcd60e51b815260040161073f90612861565b61087583838361195d565b610875838383604051806020016040528060008152506113cf565b6000818152606f60205260408120546001600160a01b0316806106325760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161073f565b600080821161094b57600080fd5b60016005600082825461095e91906128c8565b9250508190555061097133600554611afd565b600060405180610160016040528060055481526020018481526020018581526020018681526020016001151581526020016000151581526020016000151581526020016109bb3390565b6001600160a01b03168152602001336001600160a01b03168152602001336001600160a01b03168152600060209182018190526005548152600482526040908190208351815583830151600182015590830151805193945084939192610a29926002850192909101906122ab565b5060608201518051610a459160038401916020909101906122ab565b50608082015160048201805460a085015160c086015160e087015161ffff1990931694151561ff0019169490941761010091151582021762010000600160b81b03191662010000941515949094026301000000600160b81b0319169390931763010000006001600160a01b03928316021790915590830151600580840180546001600160a01b0319908116938516939093179055610120850151600685018054909316931692909217905561014090920151600790910155546040517f17090f1d29fb53f3f90f89a39c156a726f7b1d567ea849d1b2cc3a2d415445e891610b2f918491906128e0565b60405180910390a150506005549392505050565b60006001600160a01b038216610bae5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161073f565b506001600160a01b031660009081526070602052604090205490565b609f546001600160a01b03163314610c245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073f565b610c2e6000611c3f565b565b600854610100900460ff1680610c49575060085460ff16155b610c655760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015610c87576008805461ffff19166101011790555b610c8f611c91565b610c97611cf8565b610ce66040518060400160405280600e81526020016d4e46544d61726b6574506c61636560901b81525060405180604001604052806007815260200166139195135492d560ca1b815250611d57565b8015610cf8576008805461ff00191690555b50565b60046020526000908152604090208054600182015460028301805492939192610d2390612826565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4f90612826565b8015610d9c5780601f10610d7157610100808354040283529160200191610d9c565b820191906000526020600020905b815481529060010190602001808311610d7f57829003601f168201915b505050505090806003018054610db190612826565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddd90612826565b8015610e2a5780601f10610dff57610100808354040283529160200191610e2a565b820191906000526020600020905b815481529060010190602001808311610e0d57829003601f168201915b50505050600483015460058401546006850154600790950154939460ff8084169561010085048216955062010000850490911693630100000090046001600160a01b039081169381169216908b565b6060606e805461064790612826565b610e93338383611dde565b5050565b600260d1541415610eea5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161073f565b600260d1553315801590610f185750610f02816108c6565b6001600160a01b0316336001600160a01b031614155b610f2157600080fd5b60008181526004602081905260409091200154610100900460ff1615610f4657600080fd5b6000610f51826108c6565b9050600060046000848152602001908152602001600020604051806101600160405290816000820154815260200160018201548152602001600282018054610f9890612826565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc490612826565b80156110115780601f10610fe657610100808354040283529160200191611011565b820191906000526020600020905b815481529060010190602001808311610ff457829003601f168201915b5050505050815260200160038201805461102a90612826565b80601f016020809104026020016040519081016040528092919081815260200182805461105690612826565b80156110a35780601f10611078576101008083540402835291602001916110a3565b820191906000526020600020905b81548152906001019060200180831161108657829003601f168201915b5050509183525050600482015460ff808216151560208085019190915261010083048216151560408501526201000083049091161515606084015263010000009091046001600160a01b0390811660808401526005840154811660a084015260068401541660c083015260079092015460e0909101528101519091503410156111635760405162461bcd60e51b81526020600482015260126024820152715072696365203e3d206e667420707269636560701b604482015260640161073f565b61116e82338561195d565b6101008101516040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156111a9573d6000803e3d6000fd5b50610100820180516001600160a01b031661012084015233905261014082018051600191906111d99083906128c8565b905250346020808401918252600086815260048252604090819020855181559251600184015584015180518593926112189260028501929101906122ab565b50606082015180516112349160038401916020909101906122ab565b50608082015160048201805460a085015160c086015160e087015161ffff1990931694151561ff0019169490941761010091151582021762010000600160b81b03191662010000941515949094026301000000600160b81b0319169390931763010000006001600160a01b039283160217909155908301516005830180546001600160a01b03199081169284169290921790556101208401516006840180549092169216919091179055610140909101516007909101555050600160d1555050565b6000828152606f602052604090205482906001600160a01b031661131957600080fd5b611322836108c6565b6001600160a01b0316336001600160a01b03161461133f57600080fd5b506000918252600460208190526040909220918201805461ffff1916600190811790915590910155565b6006602052816000526040600020818154811061138557600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549396506001600160a01b039283169550911692909160ff9091169086565b6113d93383611866565b6113f55760405162461bcd60e51b815260040161073f90612861565b61140184848484611ead565b50505050565b6000818152606f60205260409020546060906001600160a01b03166114865760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161073f565b600061149d60408051602081019091526000815290565b905060008151116114bd57604051806020016040528060008152506114e8565b806114c784611ee0565b6040516020016114d8929190612950565b6040516020818303038152906040525b9392505050565b61156d6040518061016001604052806000815260200160008152602001606081526020016060815260200160001515815260200160001515815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b600460008381526020019081526020016000206040518061016001604052908160008201548152602001600182015481526020016002820180546115b090612826565b80601f01602080910402602001604051908101604052809291908181526020018280546115dc90612826565b80156116295780601f106115fe57610100808354040283529160200191611629565b820191906000526020600020905b81548152906001019060200180831161160c57829003601f168201915b5050505050815260200160038201805461164290612826565b80601f016020809104026020016040519081016040528092919081815260200182805461166e90612826565b80156116bb5780601f10611690576101008083540402835291602001916116bb565b820191906000526020600020905b81548152906001019060200180831161169e57829003601f168201915b5050509183525050600482015460ff80821615156020840152610100820481161515604084015262010000820416151560608301526001600160a01b036301000000909104811660808301526005830154811660a083015260068301541660c082015260079091015460e09091015292915050565b609f546001600160a01b0316331461178a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161073f565b6001600160a01b0381166117ef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161073f565b610cf881611c3f565b600081815260716020526040902080546001600160a01b0319166001600160a01b038416908117909155819061182d826108c6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606f60205260408120546001600160a01b03166118df5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161073f565b60006118ea836108c6565b9050806001600160a01b0316846001600160a01b031614806119255750836001600160a01b031661191a846106ca565b6001600160a01b0316145b8061195557506001600160a01b0380821660009081526072602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611970826108c6565b6001600160a01b0316146119d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161073f565b6001600160a01b038216611a3a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161073f565b611a456000826117f8565b6001600160a01b0383166000908152607060205260408120805460019290611a6e90849061297f565b90915550506001600160a01b0382166000908152607060205260408120805460019290611a9c9084906128c8565b90915550506000818152606f602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216611b535760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161073f565b6000818152606f60205260409020546001600160a01b031615611bb85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161073f565b6001600160a01b0382166000908152607060205260408120805460019290611be19084906128c8565b90915550506000818152606f602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b609f80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600854610100900460ff1680611caa575060085460ff16155b611cc65760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015611ce8576008805461ffff19166101011790555b611cf0611fde565b610ce6612048565b600854610100900460ff1680611d11575060085460ff16155b611d2d5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015611d4f576008805461ffff19166101011790555b610ce66120a8565b600854610100900460ff1680611d70575060085460ff16155b611d8c5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015611dae576008805461ffff19166101011790555b611db6611fde565b611dbe611fde565b611dc88383612118565b8015610875576008805461ff0019169055505050565b816001600160a01b0316836001600160a01b03161415611e405760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161073f565b6001600160a01b03838116600081815260726020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611eb884848461195d565b611ec4848484846121ad565b6114015760405162461bcd60e51b815260040161073f90612996565b606081611f045750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f2e5780611f18816129e8565b9150611f279050600a83612a19565b9150611f08565b60008167ffffffffffffffff811115611f4957611f4961247d565b6040519080825280601f01601f191660200182016040528015611f73576020820181803683370190505b5090505b841561195557611f8860018361297f565b9150611f95600a86612a2d565b611fa09060306128c8565b60f81b818381518110611fb557611fb5612a41565b60200101906001600160f81b031916908160001a905350611fd7600a86612a19565b9450611f77565b600854610100900460ff1680611ff7575060085460ff16155b6120135760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff16158015610ce6576008805461ffff19166101011790558015610cf8576008805461ff001916905550565b600854610100900460ff1680612061575060085460ff16155b61207d5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff1615801561209f576008805461ffff19166101011790555b610ce633611c3f565b600854610100900460ff16806120c1575060085460ff16155b6120dd5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff161580156120ff576008805461ffff19166101011790555b600160d1558015610cf8576008805461ff001916905550565b600854610100900460ff1680612131575060085460ff16155b61214d5760405162461bcd60e51b815260040161073f90612902565b600854610100900460ff1615801561216f576008805461ffff19166101011790555b825161218290606d9060208601906122ab565b50815161219690606e9060208501906122ab565b508015610875576008805461ff0019169055505050565b60006001600160a01b0384163b156122a057604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906121f1903390899088908890600401612a57565b6020604051808303816000875af192505050801561222c575060408051601f3d908101601f1916820190925261222991810190612a94565b60015b612286573d80801561225a576040519150601f19603f3d011682016040523d82523d6000602084013e61225f565b606091505b50805161227e5760405162461bcd60e51b815260040161073f90612996565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611955565b506001949350505050565b8280546122b790612826565b90600052602060002090601f0160209004810192826122d9576000855561231f565b82601f106122f257805160ff191683800117855561231f565b8280016001018555821561231f579182015b8281111561231f578251825591602001919060010190612304565b5061232b92915061232f565b5090565b5b8082111561232b5760008155600101612330565b6001600160e01b031981168114610cf857600080fd5b60006020828403121561236c57600080fd5b81356114e881612344565b60005b8381101561239257818101518382015260200161237a565b838111156114015750506000910152565b600081518084526123bb816020860160208601612377565b601f01601f19169290920160200192915050565b6020815260006114e860208301846123a3565b6000602082840312156123f457600080fd5b5035919050565b80356001600160a01b038116811461241257600080fd5b919050565b6000806040838503121561242a57600080fd5b612433836123fb565b946020939093013593505050565b60008060006060848603121561245657600080fd5b61245f846123fb565b925061246d602085016123fb565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156124ae576124ae61247d565b604051601f8501601f19908116603f011681019082821181831017156124d6576124d661247d565b816040528093508581528686860111156124ef57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261251a57600080fd5b6114e883833560208501612493565b60008060006060848603121561253e57600080fd5b833567ffffffffffffffff8082111561255657600080fd5b61256287838801612509565b9450602086013591508082111561257857600080fd5b5061258586828701612509565b925050604084013590509250925092565b6000602082840312156125a857600080fd5b6114e8826123fb565b60006101608d83528c60208401528060408401526125d18184018d6123a3565b905082810360608401526125e5818c6123a3565b9915156080840152505095151560a087015293151560c08601526001600160a01b0392831660e08601529082166101008501521661012083015261014090910152949350505050565b6000806040838503121561264157600080fd5b61264a836123fb565b91506020830135801515811461265f57600080fd5b809150509250929050565b6000806040838503121561267d57600080fd5b50508035926020909101359150565b600080600080608085870312156126a257600080fd5b6126ab856123fb565b93506126b9602086016123fb565b925060408501359150606085013567ffffffffffffffff8111156126dc57600080fd5b8501601f810187136126ed57600080fd5b6126fc87823560208401612493565b91505092959194509250565b600061016082518452602083015160208501526040830151816040860152612732828601826123a3565b9150506060830151848203606086015261274c82826123a3565b9150506080830151612762608086018215159052565b5060a083015161277660a086018215159052565b5060c083015161278a60c086018215159052565b5060e08301516127a560e08601826001600160a01b03169052565b50610100838101516001600160a01b039081169186019190915261012080850151909116908501526101409283015192909301919091525090565b6020815260006114e86020830184612708565b6000806040838503121561280657600080fd5b61280f836123fb565b915061281d602084016123fb565b90509250929050565b600181811c9082168061283a57607f821691505b6020821081141561285b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156128db576128db6128b2565b500190565b6040815260006128f36040830185612708565b90508260208301529392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008351612962818460208801612377565b835190830190612976818360208801612377565b01949350505050565b600082821015612991576129916128b2565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156129fc576129fc6128b2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612a2857612a28612a03565b500490565b600082612a3c57612a3c612a03565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a8a908301846123a3565b9695505050505050565b600060208284031215612aa657600080fd5b81516114e88161234456fea26469706673582212209324b7b8251b66e5ae4ecf618512a776de2489ed4d5e2c7fcf2b6d98e559da8b64736f6c634300080a0033",
    "sourceMap": "675:2765:0:-:0;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "675:2765:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:32:1;;;;;;;;;;-1:-1:-1;155:32:1;;;;-1:-1:-1;;;;;155:32:1;;;;;;-1:-1:-1;;;;;287:32:14;;;269:51;;257:2;242:18;155:32:1;;;;;;;;2033:344:5;;;;;;;;;;-1:-1:-1;2033:344:5;;;;;:::i;:::-;;:::i;:::-;;;978:14:14;;971:22;953:41;;941:2;926:18;2033:344:5;813:187:14;2995:98:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4517:217::-;;;;;;;;;;-1:-1:-1;4517:217:5;;;;;:::i;:::-;;:::i;4044:412::-;;;;;;;;;;-1:-1:-1;4044:412:5;;;;;:::i;:::-;;:::i;:::-;;5244:330;;;;;;;;;;-1:-1:-1;5244:330:5;;;;;:::i;:::-;;:::i;121:27:1:-;;;;;;;;;;-1:-1:-1;121:27:1;;;;-1:-1:-1;;;;;121:27:1;;;5640:179:5;;;;;;;;;;-1:-1:-1;5640:179:5;;;;;:::i;:::-;;:::i;2698:235::-;;;;;;;;;;-1:-1:-1;2698:235:5;;;;;:::i;:::-;;:::i;2767:662:0:-;;;;;;;;;;-1:-1:-1;2767:662:0;;;;;:::i;:::-;;:::i;:::-;;;4469:25:14;;;4457:2;4442:18;2767:662:0;4323:177:14;1332:107:0;;;;;;;;;;-1:-1:-1;1410:21:0;1332:107;;2436:205:5;;;;;;;;;;-1:-1:-1;2436:205:5;;;;;:::i;:::-;;:::i;1934:101:2:-;;;;;;;;;;;;;:::i;810:235:0:-;;;;;;;;;;;;;:::i;1302:85:2:-;;;;;;;;;;-1:-1:-1;1374:6:2;;-1:-1:-1;;;;;1374:6:2;1302:85;;611:47:1;;;;;;;;;;-1:-1:-1;611:47:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;3157:102:5:-;;;;;;;;;;;;;:::i;194:39:1:-;;;;;;;;;;-1:-1:-1;194:39:1;;;;-1:-1:-1;;;;;194:39:1;;;4801:153:5;;;;;;;;;;-1:-1:-1;4801:153:5;;;;;:::i;:::-;;:::i;1576:887:0:-;;;;;;:::i;:::-;;:::i;2475:283::-;;;;;;;;;;-1:-1:-1;2475:283:0;;;;;:::i;:::-;;:::i;906:42:1:-;;;;;;;;;;-1:-1:-1;906:42:1;;;;;:::i;:::-;;:::i;:::-;;;;6735:25:14;;;-1:-1:-1;;;;;6834:15:14;;;6829:2;6814:18;;6807:43;6886:15;;;;6866:18;;;6859:43;;;;6933:2;6918:18;;6911:34;6989:14;6982:22;6976:3;6961:19;;6954:51;6787:3;7021:19;;7014:35;6722:3;6707:19;906:42:1;6454:601:14;674:21:1;;;;;;;;;;;;;;;;5885:320:5;;;;;;;;;;-1:-1:-1;5885:320:5;;;;;:::i;:::-;;:::i;3325:329::-;;;;;;;;;;-1:-1:-1;3325:329:5;;;;;:::i;:::-;;:::i;1447:121:0:-;;;;;;;;;;-1:-1:-1;1447:121:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5020:162:5:-;;;;;;;;;;-1:-1:-1;5020:162:5;;;;;:::i;:::-;-1:-1:-1;;;;;5140:25:5;;;5117:4;5140:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5020:162;2184:198:2;;;;;;;;;;-1:-1:-1;2184:198:2;;;;;:::i;:::-;;:::i;94:20:1:-;;;;;;;;;;-1:-1:-1;94:20:1;;;;-1:-1:-1;;;;;94:20:1;;;2033:344:5;2157:4;-1:-1:-1;;;;;;2192:51:5;;-1:-1:-1;;;2192:51:5;;:126;;-1:-1:-1;;;;;;;2259:59:5;;-1:-1:-1;;;2259:59:5;2192:126;:178;;;-1:-1:-1;;;;;;;;;;1193:51:12;;;2334:36:5;2173:197;2033:344;-1:-1:-1;;2033:344:5:o;2995:98::-;3049:13;3081:5;3074:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2995:98;:::o;4517:217::-;4593:7;7765:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7765:16:5;4612:73;;;;-1:-1:-1;;;4612:73:5;;10164:2:14;4612:73:5;;;10146:21:14;10203:2;10183:18;;;10176:30;10242:34;10222:18;;;10215:62;-1:-1:-1;;;10293:18:14;;;10286:42;10345:19;;4612:73:5;;;;;;;;;-1:-1:-1;4703:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4703:24:5;;4517:217::o;4044:412::-;4124:13;4140:34;4166:7;4140:25;:34::i;:::-;4124:50;;4198:5;-1:-1:-1;;;;;4192:11:5;:2;-1:-1:-1;;;;;4192:11:5;;;4184:57;;;;-1:-1:-1;;;4184:57:5;;10577:2:14;4184:57:5;;;10559:21:14;10616:2;10596:18;;;10589:30;10655:34;10635:18;;;10628:62;-1:-1:-1;;;10706:18:14;;;10699:31;10747:19;;4184:57:5;10375:397:14;4184:57:5;955:10:10;-1:-1:-1;;;;;4273:21:5;;;;:62;;-1:-1:-1;4298:37:5;4315:5;955:10:10;5020:162:5;:::i;4298:37::-;4252:165;;;;-1:-1:-1;;;4252:165:5;;10979:2:14;4252:165:5;;;10961:21:14;11018:2;10998:18;;;10991:30;11057:34;11037:18;;;11030:62;11128:26;11108:18;;;11101:54;11172:19;;4252:165:5;10777:420:14;4252:165:5;4428:21;4437:2;4441:7;4428:8;:21::i;:::-;4114:342;4044:412;;:::o;5244:330::-;5433:41;955:10:10;5466:7:5;5433:18;:41::i;:::-;5425:103;;;;-1:-1:-1;;;5425:103:5;;;;;;;:::i;:::-;5539:28;5549:4;5555:2;5559:7;5539:9;:28::i;5640:179::-;5773:39;5790:4;5796:2;5800:7;5773:39;;;;;;;;;;;;:16;:39::i;2698:235::-;2770:7;2805:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2805:16:5;2839:19;2831:73;;;;-1:-1:-1;;;2831:73:5;;11822:2:14;2831:73:5;;;11804:21:14;11861:2;11841:18;;;11834:30;11900:34;11880:18;;;11873:62;-1:-1:-1;;;11951:18:14;;;11944:39;12000:19;;2831:73:5;11620:405:14;2767:662:0;2896:7;2933:1;2924:6;:10;2916:19;;;;;;2959:1;2948:9;;:12;;;;;;;:::i;:::-;;;;;;;;2973:28;2979:10;2991:9;;2973:5;:28::i;:::-;3014:21;3038:265;;;;;;;;3062:9;;3038:265;;;;3086:6;3038:265;;;;3107:5;3038:265;;;;3127:9;3038:265;;;;3151:4;3038:265;;;;;;3170:5;3038:265;;;;;;3190:5;3038:265;;;;;;3210:12;955:10:10;;876:96;3210:12:0;-1:-1:-1;;;;;3038:265:0;;;;;955:10:10;-1:-1:-1;;;;;3038:265:0;;;;;955:10:10;-1:-1:-1;;;;;3038:265:0;;;3291:1;3038:265;;;;;;;3325:9;;3314:21;;:10;:21;;;;;;;:28;;;;;;;;;;;;;;;;;;3014:289;;-1:-1:-1;3014:289:0;;3314:21;;:28;;;;;;;;;;;:::i;:::-;-1:-1:-1;3314:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3314:28:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3314:28:0;;;;;;-1:-1:-1;;3314:28:0;;;;;;;;;;;;-1:-1:-1;;;;;;3314:28:0;;;;;;;;;-1:-1:-1;;;;;;3314:28:0;;;;;;-1:-1:-1;;;;;3314:28:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3314:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3382:9;3360:32;;;;;;3376:4;;3382:9;3360:32;:::i;:::-;;;;;;;;-1:-1:-1;;3412:9:0;;2767:662;;;;;:::o;2436:205:5:-;2508:7;-1:-1:-1;;;;;2535:19:5;;2527:74;;;;-1:-1:-1;;;2527:74:5;;12835:2:14;2527:74:5;;;12817:21:14;12874:2;12854:18;;;12847:30;12913:34;12893:18;;;12886:62;-1:-1:-1;;;12964:18:14;;;12957:40;13014:19;;2527:74:5;12633:406:14;2527:74:5;-1:-1:-1;;;;;;2618:16:5;;;;;:9;:16;;;;;;;2436:205::o;1934:101:2:-;1374:6;;-1:-1:-1;;;;;1374:6:2;955:10:10;1514:23:2;1506:68;;;;-1:-1:-1;;;1506:68:2;;13246:2:14;1506:68:2;;;13228:21:14;;;13265:18;;;13258:30;13324:34;13304:18;;;13297:62;13376:18;;1506:68:2;13044:356:14;1506:68:2;1998:30:::1;2025:1;1998:18;:30::i;:::-;1934:101::o:0;810:235:0:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1524:13;;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;862:35:0::1;:33;:35::i;:::-;908:51;:49;:51::i;:::-;970:60;;;;;;;;;;;;;;-1:-1:-1::0;;;970:60:0::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;970:60:0::1;;::::0;:31:::1;:60::i;:::-;1671:14:3::0;1667:66;;;1701:13;:21;;-1:-1:-1;;1701:21:3;;;1667:66;1391:348;810:235:0:o;611:47:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;611:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;611:47:1;;;;;;;;;;-1:-1:-1;;;;;611:47:1;;;;;;;;;;:::o;3157:102:5:-;3213:13;3245:7;3238:14;;;;;:::i;4801:153::-;4895:52;955:10:10;4928:8:5;4938;4895:18;:52::i;:::-;4801:153;;:::o;1576:887:0:-;1815:1:4;2559:7;;:19;;2551:63;;;;-1:-1:-1;;;2551:63:4;;14022:2:14;2551:63:4;;;14004:21:14;14061:2;14041:18;;;14034:30;14100:33;14080:18;;;14073:61;14151:18;;2551:63:4;13820:355:14;2551:63:4;1815:1;2689:7;:18;1689:10:0::1;:24:::0;;::::1;::::0;:59:::1;;;1731:17;1739:8;1731:7;:17::i;:::-;-1:-1:-1::0;;;;;1717:31:0::1;:10;-1:-1:-1::0;;;;;1717:31:0::1;;;1689:59;1681:68;;;::::0;::::1;;1830:20;::::0;;;:10:::1;:20;::::0;;;;;;;:28:::1;::::0;::::1;::::0;::::1;;;:37;1822:46;;;::::0;::::1;;1879:19;1901:17;1909:8;1901:7;:17::i;:::-;1879:39;;1931:22;1956:10;:20;1967:8;1956:20;;;;;;;;;;;1931:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;1931:45:0;;;-1:-1:-1;;1931:45:0::1;::::0;::::1;::::0;::::1;::::0;;::::1;;;;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;;;::::0;;;;;;::::1;::::0;;::::1;;;::::0;;;;;;;::::1;-1:-1:-1::0;;;;;1931:45:0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;;;2022:11;::::1;::::0;;;-1:-1:-1;2009:9:0::1;:24;;1987:92;;;::::0;-1:-1:-1;;;1987:92:0;;14382:2:14;1987:92:0::1;::::0;::::1;14364:21:14::0;14421:2;14401:18;;;14394:30;-1:-1:-1;;;14440:18:14;;;14433:48;14498:18;;1987:92:0::1;14180:342:14::0;1987:92:0::1;2090:62;2108:11;2130:10;2143:8;2090:9;:62::i;:::-;2180:18;::::0;::::1;::::0;2209:35:::1;::::0;-1:-1:-1;;;;;2209:24:0;::::1;::::0;2234:9:::1;2209:35:::0;::::1;;;::::0;2163:14:::1;2209:35:::0;2163:14;2209:35;2234:9;2209:24;:35;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2279:18:0::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2257:40:0::1;:19;::::0;::::1;:40:::0;2329:10:::1;2308:31:::0;;2350:23:::1;::::0;::::1;:28:::0;;2377:1:::1;::::0;2350:23;:28:::1;::::0;2377:1;;2350:28:::1;:::i;:::-;::::0;;-1:-1:-1;2403:9:0::1;2389:11;::::0;;::::1;:23:::0;;;2427:20:::1;::::0;;;:10:::1;:20:::0;;;;;;;:28;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;2389:5;;2427:20;:28:::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2427:28:0::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2427:28:0::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;2427:28:0;;;;::::1;;-1:-1:-1::0;;2427:28:0;;;;;::::1;::::0;::::1;;::::0;::::1;;-1:-1:-1::0;;;;;;2427:28:0;;;::::1;;::::0;;;::::1;-1:-1:-1::0;;;;;;2427:28:0;;;;;;-1:-1:-1;;;;;2427:28:0;;::::1;;;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;2427:28:0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;;2862:7:4;:22;-1:-1:-1;;1576:887:0:o;2475:283::-;7742:4:5;7765:16;;;:7;:16;;;;;;2546:8:0;;-1:-1:-1;;;;;7765:16:5;1273:26:0;;;;;;2589:17:::1;2597:8;2589:7;:17::i;:::-;-1:-1:-1::0;;;;;2575:31:0::1;:10;-1:-1:-1::0;;;;;2575:31:0::1;;2567:41;;;::::0;::::1;;-1:-1:-1::0;2650:5:0::1;2619:20:::0;;;:10:::1;:20;::::0;;;;;;;:28;;::::1;:36:::0;;-1:-1:-1;;2666:38:0;2619:28:::1;2666:38:::0;;::::1;::::0;;;2715:26;;::::1;:35:::0;2475:283::o;906:42:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;906:42:1;;;;-1:-1:-1;906:42:1;;;;;;;;;;;:::o;5885:320:5:-;6054:41;955:10:10;6087:7:5;6054:18;:41::i;:::-;6046:103;;;;-1:-1:-1;;;6046:103:5;;;;;;;:::i;:::-;6159:39;6173:4;6179:2;6183:7;6192:5;6159:13;:39::i;:::-;5885:320;;;;:::o;3325:329::-;7742:4;7765:16;;;:7;:16;;;;;;3398:13;;-1:-1:-1;;;;;7765:16:5;3423:76;;;;-1:-1:-1;;;3423:76:5;;14729:2:14;3423:76:5;;;14711:21:14;14768:2;14748:18;;;14741:30;14807:34;14787:18;;;14780:62;-1:-1:-1;;;14858:18:14;;;14851:45;14913:19;;3423:76:5;14527:411:14;3423:76:5;3510:21;3534:10;3971:9;;;;;;;;;-1:-1:-1;3971:9:5;;;3895:92;3534:10;3510:34;;3585:1;3567:7;3561:21;:25;:86;;;;;;;;;;;;;;;;;3613:7;3622:18;:7;:16;:18::i;:::-;3596:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3561:86;3554:93;3325:329;-1:-1:-1;;;3325:329:5:o;1447:121:0:-;1504:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:16:0;1540:10;:20;1551:8;1540:20;;;;;;;;;;;1533:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1533:27:0;;;-1:-1:-1;;1533:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1533:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:121;-1:-1:-1;;1447:121:0:o;2184:198:2:-;1374:6;;-1:-1:-1;;;;;1374:6:2;955:10:10;1514:23:2;1506:68;;;;-1:-1:-1;;;1506:68:2;;13246:2:14;1506:68:2;;;13228:21:14;;;13265:18;;;13258:30;13324:34;13304:18;;;13297:62;13376:18;;1506:68:2;13044:356:14;1506:68:2;-1:-1:-1;;;;;2272:22:2;::::1;2264:73;;;::::0;-1:-1:-1;;;2264:73:2;;15620:2:14;2264:73:2::1;::::0;::::1;15602:21:14::0;15659:2;15639:18;;;15632:30;15698:34;15678:18;;;15671:62;-1:-1:-1;;;15749:18:14;;;15742:36;15795:19;;2264:73:2::1;15418:402:14::0;2264:73:2::1;2347:28;2366:8;2347:18;:28::i;11561:182:5:-:0;11635:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11635:29:5;-1:-1:-1;;;;;11635:29:5;;;;;;;;:24;;11688:34;11635:24;11688:25;:34::i;:::-;-1:-1:-1;;;;;11679:57:5;;;;;;;;;;;11561:182;;:::o;7960:355::-;8053:4;7765:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7765:16:5;8069:73;;;;-1:-1:-1;;;8069:73:5;;16027:2:14;8069:73:5;;;16009:21:14;16066:2;16046:18;;;16039:30;16105:34;16085:18;;;16078:62;-1:-1:-1;;;16156:18:14;;;16149:42;16208:19;;8069:73:5;15825:408:14;8069:73:5;8152:13;8168:34;8194:7;8168:25;:34::i;:::-;8152:50;;8231:5;-1:-1:-1;;;;;8220:16:5;:7;-1:-1:-1;;;;;8220:16:5;;:51;;;;8264:7;-1:-1:-1;;;;;8240:31:5;:20;8252:7;8240:11;:20::i;:::-;-1:-1:-1;;;;;8240:31:5;;8220:51;:87;;;-1:-1:-1;;;;;;5140:25:5;;;5117:4;5140:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8275:32;8212:96;7960:355;-1:-1:-1;;;;7960:355:5:o;10879:571::-;11044:4;-1:-1:-1;;;;;11006:42:5;:34;11032:7;11006:25;:34::i;:::-;-1:-1:-1;;;;;11006:42:5;;10998:96;;;;-1:-1:-1;;;10998:96:5;;16440:2:14;10998:96:5;;;16422:21:14;16479:2;16459:18;;;16452:30;16518:34;16498:18;;;16491:62;-1:-1:-1;;;16569:18:14;;;16562:39;16618:19;;10998:96:5;16238:405:14;10998:96:5;-1:-1:-1;;;;;11112:16:5;;11104:65;;;;-1:-1:-1;;;11104:65:5;;16850:2:14;11104:65:5;;;16832:21:14;16889:2;16869:18;;;16862:30;16928:34;16908:18;;;16901:62;-1:-1:-1;;;16979:18:14;;;16972:34;17023:19;;11104:65:5;16648:400:14;11104:65:5;11281:29;11298:1;11302:7;11281:8;:29::i;:::-;-1:-1:-1;;;;;11321:15:5;;;;;;:9;:15;;;;;:20;;11340:1;;11321:15;:20;;11340:1;;11321:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11351:13:5;;;;;;:9;:13;;;;;:18;;11368:1;;11351:13;:18;;11368:1;;11351:18;:::i;:::-;;;;-1:-1:-1;;11379:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11379:21:5;-1:-1:-1;;;;;11379:21:5;;;;;;;;;11416:27;;11379:16;;11416:27;;;;;;;10879:571;;;:::o;9607:372::-;-1:-1:-1;;;;;9686:16:5;;9678:61;;;;-1:-1:-1;;;9678:61:5;;17385:2:14;9678:61:5;;;17367:21:14;;;17404:18;;;17397:30;17463:34;17443:18;;;17436:62;17515:18;;9678:61:5;17183:356:14;9678:61:5;7742:4;7765:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7765:16:5;:30;9749:58;;;;-1:-1:-1;;;9749:58:5;;17746:2:14;9749:58:5;;;17728:21:14;17785:2;17765:18;;;17758:30;17824;17804:18;;;17797:58;17872:18;;9749:58:5;17544:352:14;9749:58:5;-1:-1:-1;;;;;9874:13:5;;;;;;:9;:13;;;;;:18;;9891:1;;9874:13;:18;;9891:1;;9874:18;:::i;:::-;;;;-1:-1:-1;;9902:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9902:21:5;-1:-1:-1;;;;;9902:21:5;;;;;;;;9939:33;;9902:16;;;9939:33;;9902:16;;9939:33;9607:372;;:::o;2536:187:2:-;2628:6;;;-1:-1:-1;;;;;2644:17:2;;;-1:-1:-1;;;;;;2644:17:2;;;;;;;2676:40;;2628:6;;;2644:17;2628:6;;2676:40;;2609:16;;2676:40;2599:124;2536:187;:::o;988:126::-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1524:13;;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1045:26:2::1;:24;:26::i;:::-;1081;:24;:26::i;1853:106:4:-:0;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1524:13;;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1918:34:4::1;:32;:34::i;1590:215:5:-:0;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1524:13;;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1688:26:5::1;:24;:26::i;:::-;1724:25;:23;:25::i;:::-;1759:39;1783:5;1790:7;1759:23;:39::i;:::-;1671:14:3::0;1667:66;;;1701:13;:21;;-1:-1:-1;;1701:21:3;;;1391:348;1590:215:5;;:::o;11878:307::-;12028:8;-1:-1:-1;;;;;12019:17:5;:5;-1:-1:-1;;;;;12019:17:5;;;12011:55;;;;-1:-1:-1;;;12011:55:5;;18103:2:14;12011:55:5;;;18085:21:14;18142:2;18122:18;;;18115:30;18181:27;18161:18;;;18154:55;18226:18;;12011:55:5;17901:349:14;12011:55:5;-1:-1:-1;;;;;12076:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12076:46:5;;;;;;;;;;12137:41;;953::14;;;12137::5;;926:18:14;12137:41:5;;;;;;;11878:307;;;:::o;7067:::-;7218:28;7228:4;7234:2;7238:7;7218:9;:28::i;:::-;7264:48;7287:4;7293:2;7297:7;7306:5;7264:22;:48::i;:::-;7256:111;;;;-1:-1:-1;;;7256:111:5;;;;;;;:::i;339:703:11:-;395:13;612:10;608:51;;-1:-1:-1;;638:10:11;;;;;;;;;;;;-1:-1:-1;;;638:10:11;;;;;339:703::o;608:51::-;683:5;668:12;722:75;729:9;;722:75;;754:8;;;;:::i;:::-;;-1:-1:-1;776:10:11;;-1:-1:-1;784:2:11;776:10;;:::i;:::-;;;722:75;;;806:19;838:6;828:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;828:17:11;;806:39;;855:150;862:10;;855:150;;888:11;898:1;888:11;;:::i;:::-;;-1:-1:-1;956:10:11;964:2;956:5;:10;:::i;:::-;943:24;;:2;:24;:::i;:::-;930:39;;913:6;920;913:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;913:56:11;;;;;;;;-1:-1:-1;983:11:11;992:2;983:11;;:::i;:::-;;;855:150;;807:64:10;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1524:13;;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1667:66;;;;1701:13;:21;;-1:-1:-1;;1701:21:3;;;1391:348;807:64:10:o;1120:106:2:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1524:13;;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1187:32:2::1;955:10:10::0;1187:18:2::1;:32::i;1965:104:4:-:0;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1524:13;;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1772:1:4::1;2040:7;:22:::0;1667:66:3;;;;1701:13;:21;;-1:-1:-1;;1701:21:3;;;1391:348;1965:104:4:o;1811:155:5:-;1409:13:3;;;;;;;;:30;;-1:-1:-1;1427:12:3;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:3;;;;;;;:::i;:::-;1524:13;;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:3;;;;;1547:98;1919:13:5;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1942:17:5;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1671:14:3::0;1667:66;;;1701:13;:21;;-1:-1:-1;;1701:21:3;;;1391:348;1811:155:5;;:::o;12738:800::-;12888:4;-1:-1:-1;;;;;12908:13:5;;1098:20:9;1144:8;12904:628:5;;12943:83;;-1:-1:-1;;;12943:83:5;;-1:-1:-1;;;;;12943:47:5;;;;;:83;;955:10:10;;13005:4:5;;13011:7;;13020:5;;12943:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12943:83:5;;;;;;;;-1:-1:-1;;12943:83:5;;;;;;;;;;;;:::i;:::-;;;12939:541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13204:13:5;;13200:266;;13246:60;;-1:-1:-1;;;13246:60:5;;;;;;;:::i;13200:266::-;13418:6;13412:13;13403:6;13399:2;13395:15;13388:38;12939:541;-1:-1:-1;;;;;;13076:62:5;-1:-1:-1;;;13076:62:5;;-1:-1:-1;13069:69:5;;12904:628;-1:-1:-1;13517:4:5;12738:800;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;331:131:14;-1:-1:-1;;;;;;405:32:14;;395:43;;385:71;;452:1;449;442:12;467:245;525:6;578:2;566:9;557:7;553:23;549:32;546:52;;;594:1;591;584:12;546:52;633:9;620:23;652:30;676:5;652:30;:::i;1005:258::-;1077:1;1087:113;1101:6;1098:1;1095:13;1087:113;;;1177:11;;;1171:18;1158:11;;;1151:39;1123:2;1116:10;1087:113;;;1218:6;1215:1;1212:13;1209:48;;;-1:-1:-1;;1253:1:14;1235:16;;1228:27;1005:258::o;1268:::-;1310:3;1348:5;1342:12;1375:6;1370:3;1363:19;1391:63;1447:6;1440:4;1435:3;1431:14;1424:4;1417:5;1413:16;1391:63;:::i;:::-;1508:2;1487:15;-1:-1:-1;;1483:29:14;1474:39;;;;1515:4;1470:50;;1268:258;-1:-1:-1;;1268:258:14:o;1531:220::-;1680:2;1669:9;1662:21;1643:4;1700:45;1741:2;1730:9;1726:18;1718:6;1700:45;:::i;1756:180::-;1815:6;1868:2;1856:9;1847:7;1843:23;1839:32;1836:52;;;1884:1;1881;1874:12;1836:52;-1:-1:-1;1907:23:14;;1756:180;-1:-1:-1;1756:180:14:o;1941:173::-;2009:20;;-1:-1:-1;;;;;2058:31:14;;2048:42;;2038:70;;2104:1;2101;2094:12;2038:70;1941:173;;;:::o;2119:254::-;2187:6;2195;2248:2;2236:9;2227:7;2223:23;2219:32;2216:52;;;2264:1;2261;2254:12;2216:52;2287:29;2306:9;2287:29;:::i;:::-;2277:39;2363:2;2348:18;;;;2335:32;;-1:-1:-1;;;2119:254:14:o;2378:328::-;2455:6;2463;2471;2524:2;2512:9;2503:7;2499:23;2495:32;2492:52;;;2540:1;2537;2530:12;2492:52;2563:29;2582:9;2563:29;:::i;:::-;2553:39;;2611:38;2645:2;2634:9;2630:18;2611:38;:::i;:::-;2601:48;;2696:2;2685:9;2681:18;2668:32;2658:42;;2378:328;;;;;:::o;2711:127::-;2772:10;2767:3;2763:20;2760:1;2753:31;2803:4;2800:1;2793:15;2827:4;2824:1;2817:15;2843:632;2908:5;2938:18;2979:2;2971:6;2968:14;2965:40;;;2985:18;;:::i;:::-;3060:2;3054:9;3028:2;3114:15;;-1:-1:-1;;3110:24:14;;;3136:2;3106:33;3102:42;3090:55;;;3160:18;;;3180:22;;;3157:46;3154:72;;;3206:18;;:::i;:::-;3246:10;3242:2;3235:22;3275:6;3266:15;;3305:6;3297;3290:22;3345:3;3336:6;3331:3;3327:16;3324:25;3321:45;;;3362:1;3359;3352:12;3321:45;3412:6;3407:3;3400:4;3392:6;3388:17;3375:44;3467:1;3460:4;3451:6;3443;3439:19;3435:30;3428:41;;;;2843:632;;;;;:::o;3480:222::-;3523:5;3576:3;3569:4;3561:6;3557:17;3553:27;3543:55;;3594:1;3591;3584:12;3543:55;3616:80;3692:3;3683:6;3670:20;3663:4;3655:6;3651:17;3616:80;:::i;3707:611::-;3804:6;3812;3820;3873:2;3861:9;3852:7;3848:23;3844:32;3841:52;;;3889:1;3886;3879:12;3841:52;3929:9;3916:23;3958:18;3999:2;3991:6;3988:14;3985:34;;;4015:1;4012;4005:12;3985:34;4038:50;4080:7;4071:6;4060:9;4056:22;4038:50;:::i;:::-;4028:60;;4141:2;4130:9;4126:18;4113:32;4097:48;;4170:2;4160:8;4157:16;4154:36;;;4186:1;4183;4176:12;4154:36;;4209:52;4253:7;4242:8;4231:9;4227:24;4209:52;:::i;:::-;4199:62;;;4308:2;4297:9;4293:18;4280:32;4270:42;;3707:611;;;;;:::o;4505:186::-;4564:6;4617:2;4605:9;4596:7;4592:23;4588:32;4585:52;;;4633:1;4630;4623:12;4585:52;4656:29;4675:9;4656:29;:::i;4696:1148::-;5091:4;5120:3;5150:6;5139:9;5132:25;5193:6;5188:2;5177:9;5173:18;5166:34;5236:2;5231;5220:9;5216:18;5209:30;5262:45;5303:2;5292:9;5288:18;5280:6;5262:45;:::i;:::-;5248:59;;5355:9;5347:6;5343:22;5338:2;5327:9;5323:18;5316:50;5383:33;5409:6;5401;5383:33;:::i;:::-;5460:14;;5453:22;5447:3;5432:19;;5425:51;-1:-1:-1;;5520:14:14;;5513:22;5507:3;5492:19;;5485:51;5580:14;;5573:22;5567:3;5552:19;;5545:51;-1:-1:-1;;;;;5671:15:14;;;5665:3;5650:19;;5643:44;5724:15;;;5718:3;5703:19;;5696:44;5777:15;5771:3;5756:19;;5749:44;5824:3;5809:19;;;5802:36;5375:41;4696:1148;-1:-1:-1;;;;4696:1148:14:o;5849:347::-;5914:6;5922;5975:2;5963:9;5954:7;5950:23;5946:32;5943:52;;;5991:1;5988;5981:12;5943:52;6014:29;6033:9;6014:29;:::i;:::-;6004:39;;6093:2;6082:9;6078:18;6065:32;6140:5;6133:13;6126:21;6119:5;6116:32;6106:60;;6162:1;6159;6152:12;6106:60;6185:5;6175:15;;;5849:347;;;;;:::o;6201:248::-;6269:6;6277;6330:2;6318:9;6309:7;6305:23;6301:32;6298:52;;;6346:1;6343;6336:12;6298:52;-1:-1:-1;;6369:23:14;;;6439:2;6424:18;;;6411:32;;-1:-1:-1;6201:248:14:o;7060:667::-;7155:6;7163;7171;7179;7232:3;7220:9;7211:7;7207:23;7203:33;7200:53;;;7249:1;7246;7239:12;7200:53;7272:29;7291:9;7272:29;:::i;:::-;7262:39;;7320:38;7354:2;7343:9;7339:18;7320:38;:::i;:::-;7310:48;;7405:2;7394:9;7390:18;7377:32;7367:42;;7460:2;7449:9;7445:18;7432:32;7487:18;7479:6;7476:30;7473:50;;;7519:1;7516;7509:12;7473:50;7542:22;;7595:4;7587:13;;7583:27;-1:-1:-1;7573:55:14;;7624:1;7621;7614:12;7573:55;7647:74;7713:7;7708:2;7695:16;7690:2;7686;7682:11;7647:74;:::i;:::-;7637:84;;;7060:667;;;;;;;:::o;7732:1308::-;7784:3;7812:6;7845:5;7839:12;7834:3;7827:25;7901:4;7894:5;7890:16;7884:23;7877:4;7872:3;7868:14;7861:47;7954:4;7947:5;7943:16;7937:23;7992:2;7985:4;7980:3;7976:14;7969:26;8016:45;8057:2;8052:3;8048:12;8034;8016:45;:::i;:::-;8004:57;;;8109:4;8102:5;8098:16;8092:23;8157:3;8151:4;8147:14;8140:4;8135:3;8131:14;8124:38;8185:39;8219:4;8203:14;8185:39;:::i;:::-;8171:53;;;8272:4;8265:5;8261:16;8255:23;8287:47;8328:4;8323:3;8319:14;8303;787:13;780:21;768:34;;717:91;8287:47;;8382:4;8375:5;8371:16;8365:23;8397:47;8438:4;8433:3;8429:14;8413;787:13;780:21;768:34;;717:91;8397:47;;8492:4;8485:5;8481:16;8475:23;8507:47;8548:4;8543:3;8539:14;8523;787:13;780:21;768:34;;717:91;8507:47;;8602:4;8595:5;8591:16;8585:23;8617:50;8661:4;8656:3;8652:14;8636;-1:-1:-1;;;;;80:31:14;68:44;;14:104;8617:50;-1:-1:-1;8686:6:14;8729:14;;;8723:21;-1:-1:-1;;;;;80:31:14;;;8788:12;;;68:44;;;;8820:6;8863:14;;;8857:21;80:31;;;8922:12;;;68:44;8954:6;8996:14;;;8990:21;8976:12;;;;8969:43;;;;-1:-1:-1;8976:12:14;7732:1308::o;9045:262::-;9226:2;9215:9;9208:21;9189:4;9246:55;9297:2;9286:9;9282:18;9274:6;9246:55;:::i;9312:260::-;9380:6;9388;9441:2;9429:9;9420:7;9416:23;9412:32;9409:52;;;9457:1;9454;9447:12;9409:52;9480:29;9499:9;9480:29;:::i;:::-;9470:39;;9528:38;9562:2;9551:9;9547:18;9528:38;:::i;:::-;9518:48;;9312:260;;;;;:::o;9577:380::-;9656:1;9652:12;;;;9699;;;9720:61;;9774:4;9766:6;9762:17;9752:27;;9720:61;9827:2;9819:6;9816:14;9796:18;9793:38;9790:161;;;9873:10;9868:3;9864:20;9861:1;9854:31;9908:4;9905:1;9898:15;9936:4;9933:1;9926:15;9790:161;;9577:380;;;:::o;11202:413::-;11404:2;11386:21;;;11443:2;11423:18;;;11416:30;11482:34;11477:2;11462:18;;11455:62;-1:-1:-1;;;11548:2:14;11533:18;;11526:47;11605:3;11590:19;;11202:413::o;12030:127::-;12091:10;12086:3;12082:20;12079:1;12072:31;12122:4;12119:1;12112:15;12146:4;12143:1;12136:15;12162:128;12202:3;12233:1;12229:6;12226:1;12223:13;12220:39;;;12239:18;;:::i;:::-;-1:-1:-1;12275:9:14;;12162:128::o;12295:333::-;12504:2;12493:9;12486:21;12467:4;12524:55;12575:2;12564:9;12560:18;12552:6;12524:55;:::i;:::-;12516:63;;12615:6;12610:2;12599:9;12595:18;12588:34;12295:333;;;;;:::o;13405:410::-;13607:2;13589:21;;;13646:2;13626:18;;;13619:30;13685:34;13680:2;13665:18;;13658:62;-1:-1:-1;;;13751:2:14;13736:18;;13729:44;13805:3;13790:19;;13405:410::o;14943:470::-;15122:3;15160:6;15154:13;15176:53;15222:6;15217:3;15210:4;15202:6;15198:17;15176:53;:::i;:::-;15292:13;;15251:16;;;;15314:57;15292:13;15251:16;15348:4;15336:17;;15314:57;:::i;:::-;15387:20;;14943:470;-1:-1:-1;;;;14943:470:14:o;17053:125::-;17093:4;17121:1;17118;17115:8;17112:34;;;17126:18;;:::i;:::-;-1:-1:-1;17163:9:14;;17053:125::o;18255:414::-;18457:2;18439:21;;;18496:2;18476:18;;;18469:30;18535:34;18530:2;18515:18;;18508:62;-1:-1:-1;;;18601:2:14;18586:18;;18579:48;18659:3;18644:19;;18255:414::o;18674:135::-;18713:3;-1:-1:-1;;18734:17:14;;18731:43;;;18754:18;;:::i;:::-;-1:-1:-1;18801:1:14;18790:13;;18674:135::o;18814:127::-;18875:10;18870:3;18866:20;18863:1;18856:31;18906:4;18903:1;18896:15;18930:4;18927:1;18920:15;18946:120;18986:1;19012;19002:35;;19017:18;;:::i;:::-;-1:-1:-1;19051:9:14;;18946:120::o;19071:112::-;19103:1;19129;19119:35;;19134:18;;:::i;:::-;-1:-1:-1;19168:9:14;;19071:112::o;19188:127::-;19249:10;19244:3;19240:20;19237:1;19230:31;19280:4;19277:1;19270:15;19304:4;19301:1;19294:15;19320:489;-1:-1:-1;;;;;19589:15:14;;;19571:34;;19641:15;;19636:2;19621:18;;19614:43;19688:2;19673:18;;19666:34;;;19736:3;19731:2;19716:18;;19709:31;;;19514:4;;19757:46;;19783:19;;19775:6;19757:46;:::i;:::-;19749:54;19320:489;-1:-1:-1;;;;;;19320:489:14:o;19814:249::-;19883:6;19936:2;19924:9;19915:7;19911:23;19907:32;19904:52;;;19952:1;19949;19942:12;19904:52;19984:9;19978:16;20003:30;20027:5;20003:30;:::i",
    "sourcePath": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/contracts/NFTMarketplace.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.10+commit.fc410830"
    },
    "ast": {
        "absolutePath": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/contracts/NFTMarketplace.sol",
        "exportedSymbols": {
            "AddressUpgradeable": [
                1876
            ],
            "ContextUpgradeable": [
                1920
            ],
            "ERC165Upgradeable": [
                2169
            ],
            "ERC721Upgradeable": [
                1470
            ],
            "IERC165Upgradeable": [
                2181
            ],
            "IERC721MetadataUpgradeable": [
                1631
            ],
            "IERC721ReceiverUpgradeable": [
                1488
            ],
            "IERC721Upgradeable": [
                1604
            ],
            "Initializable": [
                551
            ],
            "NFTAdminStorage": [
                325
            ],
            "NFTMarketplace": [
                314
            ],
            "NFTV1Storage": [
                379
            ],
            "OwnableUpgradeable": [
                505
            ],
            "ReentrancyGuardUpgradeable": [
                609
            ],
            "StringsUpgradeable": [
                2123
            ]
        },
        "id": 315,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:0"
            },
            {
                "absolutePath": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/contracts/NFTStorage.sol",
                "file": "./NFTStorage.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 315,
                "sourceUnit": 380,
                "src": "60:26:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                "file": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 315,
                "sourceUnit": 1471,
                "src": "88:193:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "file": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 315,
                "sourceUnit": 506,
                "src": "283:188:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
                "file": "c:/Programming/Blockchain Programs/Intern Works/Marketplace Maker/Modular-Contract/Modular-contract/node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 315,
                "sourceUnit": 610,
                "src": "473:198:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 6,
                            "name": "NFTV1Storage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 379,
                            "src": "707:12:0"
                        },
                        "id": 7,
                        "nodeType": "InheritanceSpecifier",
                        "src": "707:12:0"
                    },
                    {
                        "baseName": {
                            "id": 8,
                            "name": "ERC721Upgradeable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1470,
                            "src": "726:17:0"
                        },
                        "id": 9,
                        "nodeType": "InheritanceSpecifier",
                        "src": "726:17:0"
                    },
                    {
                        "baseName": {
                            "id": 10,
                            "name": "OwnableUpgradeable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 505,
                            "src": "750:18:0"
                        },
                        "id": 11,
                        "nodeType": "InheritanceSpecifier",
                        "src": "750:18:0"
                    },
                    {
                        "baseName": {
                            "id": 12,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 609,
                            "src": "775:26:0"
                        },
                        "id": 13,
                        "nodeType": "InheritanceSpecifier",
                        "src": "775:26:0"
                    }
                ],
                "canonicalName": "NFTMarketplace",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 314,
                "linearizedBaseContracts": [
                    314,
                    609,
                    505,
                    1470,
                    1631,
                    1604,
                    2169,
                    2181,
                    1920,
                    551,
                    379,
                    325
                ],
                "name": "NFTMarketplace",
                "nameLocation": "684:14:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 35,
                            "nodeType": "Block",
                            "src": "851:194:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 18,
                                                "name": "OwnableUpgradeable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 505,
                                                "src": "862:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$505_$",
                                                    "typeString": "type(contract OwnableUpgradeable)"
                                                }
                                            },
                                            "id": 20,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "__Ownable_init",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 409,
                                            "src": "862:33:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 21,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "862:35:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 22,
                                    "nodeType": "ExpressionStatement",
                                    "src": "862:35:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 23,
                                                "name": "ReentrancyGuardUpgradeable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 609,
                                                "src": "908:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$609_$",
                                                    "typeString": "type(contract ReentrancyGuardUpgradeable)"
                                                }
                                            },
                                            "id": 25,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "__ReentrancyGuard_init",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 574,
                                            "src": "908:49:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 26,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "908:51:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 27,
                                    "nodeType": "ExpressionStatement",
                                    "src": "908:51:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4e46544d61726b6574506c616365",
                                                "id": 31,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1002:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_9d3d609a2c6fd4d093c0aebaf75818b689b86e878f300645118df430f02ac8c3",
                                                    "typeString": "literal_string \"NFTMarketPlace\""
                                                },
                                                "value": "NFTMarketPlace"
                                            },
                                            {
                                                "hexValue": "4e46544d524b54",
                                                "id": 32,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1020:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_ff99e46684704d94a0fb7f58e5de6bb744c10f5a8ec7e779eb0a9edae8c19deb",
                                                    "typeString": "literal_string \"NFTMRKT\""
                                                },
                                                "value": "NFTMRKT"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_9d3d609a2c6fd4d093c0aebaf75818b689b86e878f300645118df430f02ac8c3",
                                                    "typeString": "literal_string \"NFTMarketPlace\""
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_ff99e46684704d94a0fb7f58e5de6bb744c10f5a8ec7e779eb0a9edae8c19deb",
                                                    "typeString": "literal_string \"NFTMRKT\""
                                                }
                                            ],
                                            "expression": {
                                                "id": 28,
                                                "name": "ERC721Upgradeable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1470,
                                                "src": "970:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1470_$",
                                                    "typeString": "type(contract ERC721Upgradeable)"
                                                }
                                            },
                                            "id": 30,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "__ERC721_init",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 680,
                                            "src": "970:31:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory,string memory)"
                                            }
                                        },
                                        "id": 33,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "970:60:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 34,
                                    "nodeType": "ExpressionStatement",
                                    "src": "970:60:0"
                                }
                            ]
                        },
                        "functionSelector": "8129fc1c",
                        "id": 36,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 16,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 15,
                                    "name": "initializer",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 550,
                                    "src": "839:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "839:11:0"
                            }
                        ],
                        "name": "initialize",
                        "nameLocation": "819:10:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 14,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "829:2:0"
                        },
                        "returnParameters": {
                            "id": 17,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "851:0:0"
                        },
                        "scope": 314,
                        "src": "810:235:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "id": 43,
                        "name": "TokenMetaReturn",
                        "nameLocation": "1059:15:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 42,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "data",
                                    "nameLocation": "1085:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 43,
                                    "src": "1075:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                        "typeString": "struct NFTV1Storage.TokenMeta"
                                    },
                                    "typeName": {
                                        "id": 38,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 37,
                                            "name": "TokenMeta",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 350,
                                            "src": "1075:9:0"
                                        },
                                        "referencedDeclaration": 350,
                                        "src": "1075:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenMeta_$350_storage_ptr",
                                            "typeString": "struct NFTV1Storage.TokenMeta"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 41,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "id",
                                    "nameLocation": "1099:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 43,
                                    "src": "1091:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 40,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1091:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1074:28:0"
                        },
                        "src": "1053:50:0"
                    },
                    {
                        "body": {
                            "id": 57,
                            "nodeType": "Block",
                            "src": "1153:66:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 53,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 48,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1170:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 49,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1170:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 51,
                                                            "name": "_tokenID",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 45,
                                                            "src": "1192:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 50,
                                                        "name": "ownerOf",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 781,
                                                        "src": "1184:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                                            "typeString": "function (uint256) view returns (address)"
                                                        }
                                                    },
                                                    "id": 52,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1184:17:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1170:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 47,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1162:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 54,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1162:40:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 55,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1162:40:0"
                                },
                                {
                                    "id": 56,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "1211:1:0"
                                }
                            ]
                        },
                        "id": 58,
                        "name": "onlyOwnerOfToken",
                        "nameLocation": "1121:16:0",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 46,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 45,
                                    "mutability": "mutable",
                                    "name": "_tokenID",
                                    "nameLocation": "1143:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 58,
                                    "src": "1138:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 44,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1138:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1137:15:0"
                        },
                        "src": "1112:107:0",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 69,
                            "nodeType": "Block",
                            "src": "1262:57:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 64,
                                                        "name": "_tokenID",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 60,
                                                        "src": "1289:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 63,
                                                    "name": "_exists",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1074,
                                                    "src": "1281:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                                        "typeString": "function (uint256) view returns (bool)"
                                                    }
                                                },
                                                "id": 65,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1281:17:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 62,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1273:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1273:26:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 67,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1273:26:0"
                                },
                                {
                                    "id": 68,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "1311:1:0"
                                }
                            ]
                        },
                        "id": 70,
                        "name": "tokenExists",
                        "nameLocation": "1235:11:0",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 61,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 60,
                                    "mutability": "mutable",
                                    "name": "_tokenID",
                                    "nameLocation": "1252:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 70,
                                    "src": "1247:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 59,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1247:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1246:15:0"
                        },
                        "src": "1226:93:0",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 81,
                            "nodeType": "Block",
                            "src": "1392:47:0",
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "arguments": [
                                                {
                                                    "id": 77,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "1418:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_NFTMarketplace_$314",
                                                        "typeString": "contract NFTMarketplace"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_NFTMarketplace_$314",
                                                        "typeString": "contract NFTMarketplace"
                                                    }
                                                ],
                                                "id": 76,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1410:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 75,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1410:7:0",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 78,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1410:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 79,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "balance",
                                        "nodeType": "MemberAccess",
                                        "src": "1410:21:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 74,
                                    "id": 80,
                                    "nodeType": "Return",
                                    "src": "1403:28:0"
                                }
                            ]
                        },
                        "functionSelector": "6f9fb98a",
                        "id": 82,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getContractBalance",
                        "nameLocation": "1341:18:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 71,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1359:2:0"
                        },
                        "returnParameters": {
                            "id": 74,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 73,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 82,
                                    "src": "1383:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 72,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1383:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1382:9:0"
                        },
                        "scope": 314,
                        "src": "1332:107:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 94,
                            "nodeType": "Block",
                            "src": "1522:46:0",
                            "statements": [
                                {
                                    "expression": {
                                        "baseExpression": {
                                            "id": 90,
                                            "name": "_tokenMeta",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 355,
                                            "src": "1540:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMeta_$350_storage_$",
                                                "typeString": "mapping(uint256 => struct NFTV1Storage.TokenMeta storage ref)"
                                            }
                                        },
                                        "id": 92,
                                        "indexExpression": {
                                            "id": 91,
                                            "name": "_tokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 84,
                                            "src": "1551:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1540:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                            "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                        }
                                    },
                                    "functionReturnParameters": 89,
                                    "id": 93,
                                    "nodeType": "Return",
                                    "src": "1533:27:0"
                                }
                            ]
                        },
                        "functionSelector": "e43f0490",
                        "id": 95,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "fetchNft",
                        "nameLocation": "1456:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 85,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 84,
                                    "mutability": "mutable",
                                    "name": "_tokenId",
                                    "nameLocation": "1473:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 95,
                                    "src": "1465:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 83,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1465:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1464:18:0"
                        },
                        "returnParameters": {
                            "id": 89,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 88,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 95,
                                    "src": "1504:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                        "typeString": "struct NFTV1Storage.TokenMeta"
                                    },
                                    "typeName": {
                                        "id": 87,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 86,
                                            "name": "TokenMeta",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 350,
                                            "src": "1504:9:0"
                                        },
                                        "referencedDeclaration": 350,
                                        "src": "1504:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenMeta_$350_storage_ptr",
                                            "typeString": "struct NFTV1Storage.TokenMeta"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1503:18:0"
                        },
                        "scope": 314,
                        "src": "1447:121:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 210,
                            "nodeType": "Block",
                            "src": "1670:793:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 116,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 109,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 103,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "1689:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 104,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "1689:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "!=",
                                                    "rightExpression": {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "30",
                                                                "id": 107,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "1711:1:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 106,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1703:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 105,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1703:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 108,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1703:10:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "1689:24:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 115,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 110,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "1717:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 111,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "1717:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "!=",
                                                    "rightExpression": {
                                                        "arguments": [
                                                            {
                                                                "id": 113,
                                                                "name": "_tokenId",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 97,
                                                                "src": "1739:8:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "id": 112,
                                                            "name": "ownerOf",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 781,
                                                            "src": "1731:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                                                "typeString": "function (uint256) view returns (address)"
                                                            }
                                                        },
                                                        "id": 114,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1731:17:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "1717:31:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "1689:59:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 102,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1681:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1681:68:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 118,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1681:68:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 125,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "baseExpression": {
                                                            "id": 120,
                                                            "name": "_tokenMeta",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 355,
                                                            "src": "1830:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMeta_$350_storage_$",
                                                                "typeString": "mapping(uint256 => struct NFTV1Storage.TokenMeta storage ref)"
                                                            }
                                                        },
                                                        "id": 122,
                                                        "indexExpression": {
                                                            "id": 121,
                                                            "name": "_tokenId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 97,
                                                            "src": "1841:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "1830:20:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                                            "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                                        }
                                                    },
                                                    "id": 123,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "bidSale",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 339,
                                                    "src": "1830:28:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "66616c7365",
                                                    "id": 124,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1862:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "1830:37:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 119,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1822:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 126,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1822:46:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 127,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1822:46:0"
                                },
                                {
                                    "assignments": [
                                        129
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 129,
                                            "mutability": "mutable",
                                            "name": "tokenSeller",
                                            "nameLocation": "1887:11:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 210,
                                            "src": "1879:19:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 128,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1879:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 133,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 131,
                                                "name": "_tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 97,
                                                "src": "1909:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 130,
                                            "name": "ownerOf",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 781,
                                            "src": "1901:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                                "typeString": "function (uint256) view returns (address)"
                                            }
                                        },
                                        "id": 132,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1901:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1879:39:0"
                                },
                                {
                                    "assignments": [
                                        136
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 136,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nameLocation": "1948:5:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 210,
                                            "src": "1931:22:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                "typeString": "struct NFTV1Storage.TokenMeta"
                                            },
                                            "typeName": {
                                                "id": 135,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 134,
                                                    "name": "TokenMeta",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 350,
                                                    "src": "1931:9:0"
                                                },
                                                "referencedDeclaration": 350,
                                                "src": "1931:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_storage_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 140,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 137,
                                            "name": "_tokenMeta",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 355,
                                            "src": "1956:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMeta_$350_storage_$",
                                                "typeString": "mapping(uint256 => struct NFTV1Storage.TokenMeta storage ref)"
                                            }
                                        },
                                        "id": 139,
                                        "indexExpression": {
                                            "id": 138,
                                            "name": "_tokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 97,
                                            "src": "1967:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1956:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                            "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1931:45:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 146,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 142,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2009:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 143,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2009:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 144,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 136,
                                                        "src": "2022:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                            "typeString": "struct NFTV1Storage.TokenMeta memory"
                                                        }
                                                    },
                                                    "id": 145,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "price",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 331,
                                                    "src": "2022:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2009:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5072696365203e3d206e6674207072696365",
                                                "id": 147,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2048:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8c3fe9c23aaacc572d537698ac47bcf3077161cbd4a658a8c3a16a88f653b417",
                                                    "typeString": "literal_string \"Price >= nft price\""
                                                },
                                                "value": "Price >= nft price"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8c3fe9c23aaacc572d537698ac47bcf3077161cbd4a658a8c3a16a88f653b417",
                                                    "typeString": "literal_string \"Price >= nft price\""
                                                }
                                            ],
                                            "id": 141,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1987:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 148,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1987:92:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 149,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1987:92:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 153,
                                                        "name": "tokenSeller",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 129,
                                                        "src": "2108:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 152,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2100:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 151,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2100:8:0",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 154,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2100:20:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 157,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "2130:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 158,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "2130:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 156,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2122:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 155,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2122:8:0",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 159,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2122:19:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "id": 160,
                                                "name": "_tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 97,
                                                "src": "2143:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 150,
                                            "name": "_transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1336,
                                            "src": "2090:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2090:62:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 162,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2090:62:0"
                                },
                                {
                                    "assignments": [
                                        164
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 164,
                                            "mutability": "mutable",
                                            "name": "sendTo",
                                            "nameLocation": "2171:6:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 210,
                                            "src": "2163:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 163,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2163:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 167,
                                    "initialValue": {
                                        "expression": {
                                            "id": 165,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 136,
                                            "src": "2180:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                "typeString": "struct NFTV1Storage.TokenMeta memory"
                                            }
                                        },
                                        "id": 166,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "currentOwner",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 345,
                                        "src": "2180:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2163:35:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 173,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2234:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 174,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "src": "2234:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 170,
                                                        "name": "sendTo",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 164,
                                                        "src": "2217:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 169,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2209:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 168,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2209:8:0",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 171,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2209:15:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 172,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "2209:24:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 175,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2209:35:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 176,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2209:35:0"
                                },
                                {
                                    "expression": {
                                        "id": 182,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "id": 177,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 136,
                                                "src": "2257:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta memory"
                                                }
                                            },
                                            "id": 179,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "previousOwner",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 347,
                                            "src": "2257:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 180,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 136,
                                                "src": "2279:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta memory"
                                                }
                                            },
                                            "id": 181,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "currentOwner",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 345,
                                            "src": "2279:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2257:40:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 183,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2257:40:0"
                                },
                                {
                                    "expression": {
                                        "id": 189,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "id": 184,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 136,
                                                "src": "2308:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta memory"
                                                }
                                            },
                                            "id": 186,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "currentOwner",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 345,
                                            "src": "2308:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 187,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "2329:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 188,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "2329:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2308:31:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 190,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2308:31:0"
                                },
                                {
                                    "expression": {
                                        "id": 195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "id": 191,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 136,
                                                "src": "2350:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta memory"
                                                }
                                            },
                                            "id": 193,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "numberOfTransfers",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 349,
                                            "src": "2350:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 194,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2377:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2350:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 196,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2350:28:0"
                                },
                                {
                                    "expression": {
                                        "id": 202,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "id": 197,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 136,
                                                "src": "2389:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta memory"
                                                }
                                            },
                                            "id": 199,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "price",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 331,
                                            "src": "2389:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 200,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "2403:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 201,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "src": "2403:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2389:23:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 203,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2389:23:0"
                                },
                                {
                                    "expression": {
                                        "id": 208,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 204,
                                                "name": "_tokenMeta",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 355,
                                                "src": "2427:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMeta_$350_storage_$",
                                                    "typeString": "mapping(uint256 => struct NFTV1Storage.TokenMeta storage ref)"
                                                }
                                            },
                                            "id": 206,
                                            "indexExpression": {
                                                "id": 205,
                                                "name": "_tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 97,
                                                "src": "2438:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "2427:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                                "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 207,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 136,
                                            "src": "2450:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                "typeString": "struct NFTV1Storage.TokenMeta memory"
                                            }
                                        },
                                        "src": "2427:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                            "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                        }
                                    },
                                    "id": 209,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2427:28:0"
                                }
                            ]
                        },
                        "functionSelector": "a37365e0",
                        "id": 211,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 100,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 99,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 604,
                                    "src": "1652:12:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1652:12:0"
                            }
                        ],
                        "name": "BuyNFT",
                        "nameLocation": "1585:6:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 98,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 97,
                                    "mutability": "mutable",
                                    "name": "_tokenId",
                                    "nameLocation": "1600:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 211,
                                    "src": "1592:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 96,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1592:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1591:18:0"
                        },
                        "returnParameters": {
                            "id": 101,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1670:0:0"
                        },
                        "scope": 314,
                        "src": "1576:887:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 251,
                            "nodeType": "Block",
                            "src": "2555:203:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 227,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 222,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2575:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 223,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2575:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 225,
                                                            "name": "_tokenId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 213,
                                                            "src": "2597:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 224,
                                                        "name": "ownerOf",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 781,
                                                        "src": "2589:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                                            "typeString": "function (uint256) view returns (address)"
                                                        }
                                                    },
                                                    "id": 226,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2589:17:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "2575:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 221,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2567:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 228,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2567:41:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 229,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2567:41:0"
                                },
                                {
                                    "expression": {
                                        "id": 235,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 230,
                                                    "name": "_tokenMeta",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 355,
                                                    "src": "2619:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMeta_$350_storage_$",
                                                        "typeString": "mapping(uint256 => struct NFTV1Storage.TokenMeta storage ref)"
                                                    }
                                                },
                                                "id": 232,
                                                "indexExpression": {
                                                    "id": 231,
                                                    "name": "_tokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 213,
                                                    "src": "2630:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2619:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                                    "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                                }
                                            },
                                            "id": 233,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "bidSale",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 339,
                                            "src": "2619:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "66616c7365",
                                            "id": 234,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2650:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "false"
                                        },
                                        "src": "2619:36:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 236,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2619:36:0"
                                },
                                {
                                    "expression": {
                                        "id": 242,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 237,
                                                    "name": "_tokenMeta",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 355,
                                                    "src": "2666:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMeta_$350_storage_$",
                                                        "typeString": "mapping(uint256 => struct NFTV1Storage.TokenMeta storage ref)"
                                                    }
                                                },
                                                "id": 239,
                                                "indexExpression": {
                                                    "id": 238,
                                                    "name": "_tokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 213,
                                                    "src": "2677:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2666:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                                    "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                                }
                                            },
                                            "id": 240,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "directSale",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 337,
                                            "src": "2666:31:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 241,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2700:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "2666:38:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 243,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2666:38:0"
                                },
                                {
                                    "expression": {
                                        "id": 249,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 244,
                                                    "name": "_tokenMeta",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 355,
                                                    "src": "2715:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMeta_$350_storage_$",
                                                        "typeString": "mapping(uint256 => struct NFTV1Storage.TokenMeta storage ref)"
                                                    }
                                                },
                                                "id": 246,
                                                "indexExpression": {
                                                    "id": 245,
                                                    "name": "_tokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 213,
                                                    "src": "2726:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2715:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                                    "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                                }
                                            },
                                            "id": 247,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "price",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 331,
                                            "src": "2715:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 248,
                                            "name": "_price",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 215,
                                            "src": "2744:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2715:35:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 250,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2715:35:0"
                                }
                            ]
                        },
                        "functionSelector": "a632f800",
                        "id": 252,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 218,
                                        "name": "_tokenId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 213,
                                        "src": "2546:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                ],
                                "id": 219,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 217,
                                    "name": "tokenExists",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 70,
                                    "src": "2534:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2534:21:0"
                            }
                        ],
                        "name": "SellNFT",
                        "nameLocation": "2484:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 216,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 213,
                                    "mutability": "mutable",
                                    "name": "_tokenId",
                                    "nameLocation": "2500:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 252,
                                    "src": "2492:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 212,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2492:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 215,
                                    "mutability": "mutable",
                                    "name": "_price",
                                    "nameLocation": "2518:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 252,
                                    "src": "2510:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 214,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2510:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2491:34:0"
                        },
                        "returnParameters": {
                            "id": 220,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2555:0:0"
                        },
                        "scope": 314,
                        "src": "2475:283:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 312,
                            "nodeType": "Block",
                            "src": "2905:524:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 266,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 264,
                                                    "name": "_price",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 258,
                                                    "src": "2924:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 265,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2933:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "2924:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 263,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2916:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 267,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2916:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 268,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2916:19:0"
                                },
                                {
                                    "expression": {
                                        "id": 271,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 269,
                                            "name": "_tokenIds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 357,
                                            "src": "2948:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 270,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2959:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2948:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 272,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2948:12:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 274,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2979:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 275,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2979:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 276,
                                                "name": "_tokenIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 357,
                                                "src": "2991:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 273,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1216,
                                            "src": "2973:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 277,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2973:28:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 278,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2973:28:0"
                                },
                                {
                                    "assignments": [
                                        281
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 281,
                                            "mutability": "mutable",
                                            "name": "meta",
                                            "nameLocation": "3031:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 312,
                                            "src": "3014:21:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                "typeString": "struct NFTV1Storage.TokenMeta"
                                            },
                                            "typeName": {
                                                "id": 280,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 279,
                                                    "name": "TokenMeta",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 350,
                                                    "src": "3014:9:0"
                                                },
                                                "referencedDeclaration": 350,
                                                "src": "3014:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_storage_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 298,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 283,
                                                "name": "_tokenIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 357,
                                                "src": "3062:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 284,
                                                "name": "_price",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 258,
                                                "src": "3086:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 285,
                                                "name": "_name",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 256,
                                                "src": "3107:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "id": 286,
                                                "name": "_tokenURI",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 254,
                                                "src": "3127:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "hexValue": "74727565",
                                                "id": 287,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3151:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "true"
                                            },
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 288,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3170:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            },
                                            {
                                                "hexValue": "66616c7365",
                                                "id": 289,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "bool",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3190:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "value": "false"
                                            },
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 290,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1906,
                                                    "src": "3210:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 291,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3210:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 292,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1906,
                                                    "src": "3237:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 293,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3237:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 294,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1906,
                                                    "src": "3264:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 295,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3264:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "30",
                                                "id": 296,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3291:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                }
                                            ],
                                            "id": 282,
                                            "name": "TokenMeta",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 350,
                                            "src": "3038:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_struct$_TokenMeta_$350_storage_ptr_$",
                                                "typeString": "type(struct NFTV1Storage.TokenMeta storage pointer)"
                                            }
                                        },
                                        "id": 297,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "structConstructorCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3038:265:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                            "typeString": "struct NFTV1Storage.TokenMeta memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3014:289:0"
                                },
                                {
                                    "expression": {
                                        "id": 303,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 299,
                                                "name": "_tokenMeta",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 355,
                                                "src": "3314:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMeta_$350_storage_$",
                                                    "typeString": "mapping(uint256 => struct NFTV1Storage.TokenMeta storage ref)"
                                                }
                                            },
                                            "id": 301,
                                            "indexExpression": {
                                                "id": 300,
                                                "name": "_tokenIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 357,
                                                "src": "3325:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "3314:21:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                                "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 302,
                                            "name": "meta",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 281,
                                            "src": "3338:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                "typeString": "struct NFTV1Storage.TokenMeta memory"
                                            }
                                        },
                                        "src": "3314:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenMeta_$350_storage",
                                            "typeString": "struct NFTV1Storage.TokenMeta storage ref"
                                        }
                                    },
                                    "id": 304,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3314:28:0"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "id": 306,
                                                "name": "meta",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 281,
                                                "src": "3376:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta memory"
                                                }
                                            },
                                            {
                                                "id": 307,
                                                "name": "_tokenIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 357,
                                                "src": "3382:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_TokenMeta_$350_memory_ptr",
                                                    "typeString": "struct NFTV1Storage.TokenMeta memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 305,
                                            "name": "TokenMetaReturn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 43,
                                            "src": "3360:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_struct$_TokenMeta_$350_memory_ptr_$_t_uint256_$returns$__$",
                                                "typeString": "function (struct NFTV1Storage.TokenMeta memory,uint256)"
                                            }
                                        },
                                        "id": 308,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3360:32:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 309,
                                    "nodeType": "EmitStatement",
                                    "src": "3355:37:0"
                                },
                                {
                                    "expression": {
                                        "id": 310,
                                        "name": "_tokenIds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 357,
                                        "src": "3412:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 262,
                                    "id": 311,
                                    "nodeType": "Return",
                                    "src": "3405:16:0"
                                }
                            ]
                        },
                        "functionSelector": "64b30907",
                        "id": 313,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintNFT",
                        "nameLocation": "2776:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 259,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 254,
                                    "mutability": "mutable",
                                    "name": "_tokenURI",
                                    "nameLocation": "2808:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 313,
                                    "src": "2794:23:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 253,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2794:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 256,
                                    "mutability": "mutable",
                                    "name": "_name",
                                    "nameLocation": "2842:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 313,
                                    "src": "2828:19:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 255,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2828:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 258,
                                    "mutability": "mutable",
                                    "name": "_price",
                                    "nameLocation": "2866:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 313,
                                    "src": "2858:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 257,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2858:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2783:96:0"
                        },
                        "returnParameters": {
                            "id": 262,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 261,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 313,
                                    "src": "2896:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 260,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2896:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2895:9:0"
                        },
                        "scope": 314,
                        "src": "2767:662:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 315,
                "src": "675:2765:0",
                "usedErrors": []
            }
        ],
        "src": "33:3407:0"
    },
    "functionHashes": {
        "Bids(uint256,uint256)": "a7f323da",
        "BuyNFT(uint256)": "a37365e0",
        "NFTImplementation()": "00d96d02",
        "SellNFT(uint256,uint256)": "a632f800",
        "_tokenIds()": "aa46a400",
        "_tokenMeta(uint256)": "8e57ff16",
        "admin()": "f851a440",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "fetchNft(uint256)": "e43f0490",
        "getApproved(uint256)": "081812fc",
        "getContractBalance()": "6f9fb98a",
        "initialize()": "8129fc1c",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mintNFT(string,string,uint256)": "64b30907",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "pendingAdmin()": "26782247",
        "pendingNFTImplementation()": "98062bbf",
        "renounceOwnership()": "715018a6",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2196600",
            "executionCost": "2346",
            "totalCost": "2198946"
        },
        "external": {
            "Bids(uint256,uint256)": "15462",
            "BuyNFT(uint256)": "infinite",
            "NFTImplementation()": "2373",
            "SellNFT(uint256,uint256)": "51286",
            "_tokenIds()": "2362",
            "_tokenMeta(uint256)": "infinite",
            "admin()": "2436",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2656",
            "fetchNft(uint256)": "infinite",
            "getApproved(uint256)": "4727",
            "getContractBalance()": "239",
            "initialize()": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "mintNFT(string,string,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "2366",
            "ownerOf(uint256)": "2624",
            "pendingAdmin()": "2438",
            "pendingNFTImplementation()": "2371",
            "renounceOwnership()": "28206",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26753",
            "supportsInterface(bytes4)": "590",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28400"
        }
    }
}